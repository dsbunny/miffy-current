System.register([],function(_export,_context){"use strict";var N,M,R,k,H,I,L,z,i,WebAsset,WebImage,WebVideo,WebCollection,WebImageCollection,WebVideoCollection,WebAssetManager,RendererAsset,WebRenderer,LunaVideoCollection,LunaAssetManager,EvictionEntry,LunaPool,LunaPrefetch,LunaRenderer,NullRenderer,RTCMesh,ExtData,DecodeError,ExtensionCodec,Encoder,CachedKeyDecoder,StackPool,Decoder,RaftNode,RaftMessage,Raft,Peer,RaftCluster,ServiceWorkerPrefetch,_Symbol$metadata,_a$1$litPropertyMetad,_a$1$reactiveElementV,_t$1$litHtmlVersions,_s$litElementHydrateS,_s$litElementVersions,_ExtensionCodec,_Raft,_WebPlaylistElement,_LunaPlaylistElement,t$2,e$4,s$2,o$4,n$3,r$3,i$3,S$1,c$2,i$2,e$3,h$1,r$2,o$3,n$2,a$1,c$1,l$1,p$1,d$1,u$1,f$1,b,y$1,t$1,i$1,s$1,e$2,h,o$2,n$1,r$1,l,c,a,u,d,f,v,_,m,p,g,$,y,x,T,E,A,C,V,j,B,s,o$1,t,o,r,e$1,proxyMarker,createEndpoint,releaseProxy,finalizer,throwMarker,isObject,proxyTransferHandler,throwTransferHandler,transferHandlers,proxyCounter,proxyFinalizers,transferCache,self$1,EventTarget$1,_WebImage_brand,LG_STORAGE_PATH,LG_POOL_PATH,LG_HTTP_PATH,_RTCMesh_brand,sharedTextEncoder,TEXT_ENCODER_THRESHOLD,CHUNK_SIZE,sharedTextDecoder,TEXT_DECODER_THRESHOLD,UINT32_MAX,EXT_TIMESTAMP,TIMESTAMP32_MAX_SEC,TIMESTAMP64_MAX_SEC,timestampExtension,DEFAULT_MAX_DEPTH,DEFAULT_INITIAL_BUFFER_SIZE,DEFAULT_MAX_KEY_LENGTH,DEFAULT_MAX_LENGTH_PER_KEY,STATE_ARRAY,STATE_MAP_KEY,STATE_MAP_VALUE,mapKeyConverter,HEAD_BYTE_REQUIRED,EMPTY_VIEW,EMPTY_BYTES,MORE_DATA,sharedCachedKeyDecoder,_address,_send,_state,_leader,_term,_address2,_type,_granted,_address3,_electionMinTimeout,_electionMaxTimeout,_heatbeatInterval,_heartbeatExpiration,_electionExpiration,_votesFor,_votesGranted,_nodes,_state2,_leader2,_currentTerm,_Raft_brand,MAX_BACKOFF_TIMEOUT,MIN_BACKOFF_TIMEOUT,CONNECT_TIMEOUT,ELECTION_MIN_TIMEOUT,ELECTION_MAX_TIMEOUT,HEARTBEAT_INTERVAL,__decorate$1,WebPlaylistElement,WebPlaylistElement$1,__decorate,LunaPlaylistElement,LunaPlaylistElement$1;function _classPrivateFieldInitSpec(e,t,a){_checkPrivateRedeclaration(e,t),t.set(e,a);}function _classPrivateFieldGet(s,a){return s.get(_assertClassBrand(s,a));}function _classPrivateFieldSet(s,a,r){return s.set(_assertClassBrand(s,a),r),r;}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}function _defineProperty(e,r,t){return(r=_toPropertyKey(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e;}function _toPropertyKey(t){var i=_toPrimitive(t,"string");return"symbol"==typeof i?i:i+"";}function _toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.");}return("string"===r?String:Number)(t);}function _classPrivateMethodInitSpec(e,a){_checkPrivateRedeclaration(e,a),a.add(e);}function _checkPrivateRedeclaration(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object");}function _assertClassBrand(e,t,n){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:n;throw new TypeError("Private element is not present on this object");}function asyncGeneratorStep(n,t,e,r,o,a,c){try{var i=n[a](c),u=i.value;}catch(n){return void e(n);}i.done?t(u):Promise.resolve(u).then(r,o);}function _asyncToGenerator(n){return function(){var t=this,e=arguments;return new Promise(function(r,o){var a=n.apply(t,e);function _next(n){asyncGeneratorStep(a,r,o,_next,_throw,"next",n);}function _throw(n){asyncGeneratorStep(a,r,o,_next,_throw,"throw",n);}_next(void 0);});};}function _wrapAsyncGenerator(e){return function(){return new AsyncGenerator(e.apply(this,arguments));};}function AsyncGenerator(e){var r,t;function resume(r,t){try{var n=e[r](t),o=n.value,u=o instanceof _OverloadYield;Promise.resolve(u?o.v:o).then(function(t){if(u){var i="return"===r?"return":"next";if(!o.k||t.done)return resume(i,t);t=e[i](t).value;}settle(n.done?"return":"normal",t);},function(e){resume("throw",e);});}catch(e){settle("throw",e);}}function settle(e,n){switch(e){case"return":r.resolve({value:n,done:!0});break;case"throw":r.reject(n);break;default:r.resolve({value:n,done:!1});}(r=r.next)?resume(r.key,r.arg):t=null;}this._invoke=function(e,n){return new Promise(function(o,u){var i={key:e,arg:n,resolve:o,reject:u,next:null};t?t=t.next=i:(r=t=i,resume(e,n));});},"function"!=typeof e.return&&(this.return=void 0);}function _awaitAsyncGenerator(e){return new _OverloadYield(e,0);}function _asyncGeneratorDelegate(t){var e={},n=!1;function pump(e,r){return n=!0,r=new Promise(function(n){n(t[e](r));}),{done:!1,value:new _OverloadYield(r,1)};}return e["undefined"!=typeof Symbol&&Symbol.iterator||"@@iterator"]=function(){return this;},e.next=function(t){return n?(n=!1,t):pump("next",t);},"function"==typeof t.throw&&(e.throw=function(t){if(n)throw n=!1,t;return pump("throw",t);}),"function"==typeof t.return&&(e.return=function(t){return n?(n=!1,t):pump("return",t);}),e;}function _OverloadYield(e,d){this.v=e,this.k=d;}function _asyncIterator(r){var n,t,o,e=2;for("undefined"!=typeof Symbol&&(t=Symbol.asyncIterator,o=Symbol.iterator);e--;){if(t&&null!=(n=r[t]))return n.call(r);if(o&&null!=(n=r[o]))return new AsyncFromSyncIterator(n.call(r));t="@@asyncIterator",o="@@iterator";}throw new TypeError("Object is not async iterable");}function AsyncFromSyncIterator(r){function AsyncFromSyncIteratorContinuation(r){if(Object(r)!==r)return Promise.reject(new TypeError(r+" is not an object."));var n=r.done;return Promise.resolve(r.value).then(function(r){return{value:r,done:n};});}return AsyncFromSyncIterator=function(r){this.s=r,this.n=r.next;},AsyncFromSyncIterator.prototype={s:null,n:null,next:function(){return AsyncFromSyncIteratorContinuation(this.n.apply(this.s,arguments));},return:function(r){var n=this.s.return;return void 0===n?Promise.resolve({value:r,done:!0}):AsyncFromSyncIteratorContinuation(n.apply(this.s,arguments));},throw:function(r){var n=this.s.return;return void 0===n?Promise.reject(r):AsyncFromSyncIteratorContinuation(n.apply(this.s,arguments));}},new AsyncFromSyncIterator(r);}function P(t,i){if(!a(t)||!t.hasOwnProperty("raw"))throw Error("invalid template strings array");return void 0!==s$1?s$1.createHTML(i):i;}function S(t,i,s=t,e){var _s$_$Co,_h,_h2,_h2$_$AO,_s$_$Co2;if(i===T)return i;let h=void 0!==e?(_s$_$Co=s._$Co)===null||_s$_$Co===void 0?void 0:_s$_$Co[e]:s._$Cl;const o=c(i)?void 0:i._$litDirective$;return((_h=h)===null||_h===void 0?void 0:_h.constructor)!==o&&((_h2=h)!==null&&_h2!==void 0&&(_h2$_$AO=_h2._$AO)!==null&&_h2$_$AO!==void 0&&_h2$_$AO.call(_h2,false),void 0===o?h=void 0:(h=new o(t),h._$AT(t,s,e)),void 0!==e?((_s$_$Co2=s._$Co)!==null&&_s$_$Co2!==void 0?_s$_$Co2:s._$Co=[])[e]=h:s._$Cl=h),void 0!==h&&(i=S(t,h._$AS(t,i.values),h,e)),i;}function n(t){return(e,o)=>"object"==typeof o?r(t,e,o):((t,e,o)=>{const r=e.hasOwnProperty(o);return e.constructor.createProperty(o,t),r?Object.getOwnPropertyDescriptor(e,o):void 0;})(t,e,o);}/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 *//**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */function e(e,r){return(n,s,i)=>{const o=t=>{var _t$renderRoot$querySe,_t$renderRoot;return(_t$renderRoot$querySe=(_t$renderRoot=t.renderRoot)===null||_t$renderRoot===void 0?void 0:_t$renderRoot.querySelector(e))!==null&&_t$renderRoot$querySe!==void 0?_t$renderRoot$querySe:null;};return e$1(n,s,{get(){return o(this);}});};}/**
 * @license
 * Copyright 2019 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */function isAllowedOrigin(allowedOrigins,origin){for(const allowedOrigin of allowedOrigins){if(origin===allowedOrigin||allowedOrigin==="*"){return true;}if(allowedOrigin instanceof RegExp&&allowedOrigin.test(origin)){return true;}}return false;}function expose(obj,ep=globalThis,allowedOrigins=["*"]){ep.addEventListener("message",function callback(ev){if(!ev||!ev.data){return;}if(!isAllowedOrigin(allowedOrigins,ev.origin)){console.warn(`Invalid origin '${ev.origin}' for comlink proxy`);return;}const{id,type,path}=Object.assign({path:[]},ev.data);const argumentList=(ev.data.argumentList||[]).map(fromWireValue);let returnValue;try{const parent=path.slice(0,-1).reduce((obj,prop)=>obj[prop],obj);const rawValue=path.reduce((obj,prop)=>obj[prop],obj);switch(type){case"GET"/* MessageType.GET */:{returnValue=rawValue;}break;case"SET"/* MessageType.SET */:{parent[path.slice(-1)[0]]=fromWireValue(ev.data.value);returnValue=true;}break;case"APPLY"/* MessageType.APPLY */:{returnValue=rawValue.apply(parent,argumentList);}break;case"CONSTRUCT"/* MessageType.CONSTRUCT */:{const value=new rawValue(...argumentList);returnValue=proxy(value);}break;case"ENDPOINT"/* MessageType.ENDPOINT */:{const{port1,port2}=new MessageChannel();expose(obj,port2);returnValue=transfer(port1,[port1]);}break;case"RELEASE"/* MessageType.RELEASE */:{returnValue=undefined;}break;default:return;}}catch(value){returnValue={value,[throwMarker]:0};}Promise.resolve(returnValue).catch(value=>{return{value,[throwMarker]:0};}).then(returnValue=>{const[wireValue,transferables]=toWireValue(returnValue);ep.postMessage(Object.assign(Object.assign({},wireValue),{id}),transferables);if(type==="RELEASE"/* MessageType.RELEASE */){// detach and deactive after sending release response above.
ep.removeEventListener("message",callback);closeEndPoint(ep);if(finalizer in obj&&typeof obj[finalizer]==="function"){obj[finalizer]();}}}).catch(error=>{// Send Serialization Error To Caller
const[wireValue,transferables]=toWireValue({value:new TypeError("Unserializable return value"),[throwMarker]:0});ep.postMessage(Object.assign(Object.assign({},wireValue),{id}),transferables);});});if(ep.start){ep.start();}}function isMessagePort(endpoint){return endpoint.constructor.name==="MessagePort";}function closeEndPoint(endpoint){if(isMessagePort(endpoint))endpoint.close();}function wrap(ep,target){const pendingListeners=new Map();ep.addEventListener("message",function handleMessage(ev){const{data}=ev;if(!data||!data.id){return;}const resolver=pendingListeners.get(data.id);if(!resolver){return;}try{resolver(data);}finally{pendingListeners.delete(data.id);}});return createProxy(ep,pendingListeners,[],target);}function throwIfProxyReleased(isReleased){if(isReleased){throw new Error("Proxy has been released and is not useable");}}function releaseEndpoint(ep){return requestResponseMessage(ep,new Map(),{type:"RELEASE"/* MessageType.RELEASE */}).then(()=>{closeEndPoint(ep);});}function registerProxy(proxy,ep){const newCount=(proxyCounter.get(ep)||0)+1;proxyCounter.set(ep,newCount);if(proxyFinalizers){proxyFinalizers.register(proxy,ep,proxy);}}function unregisterProxy(proxy){if(proxyFinalizers){proxyFinalizers.unregister(proxy);}}function createProxy(ep,pendingListeners,path=[],target=function(){}){let isProxyReleased=false;const proxy=new Proxy(target,{get(_target,prop){throwIfProxyReleased(isProxyReleased);if(prop===releaseProxy){return()=>{unregisterProxy(proxy);releaseEndpoint(ep);pendingListeners.clear();isProxyReleased=true;};}if(prop==="then"){if(path.length===0){return{then:()=>proxy};}const r=requestResponseMessage(ep,pendingListeners,{type:"GET"/* MessageType.GET */,path:path.map(p=>p.toString())}).then(fromWireValue);return r.then.bind(r);}return createProxy(ep,pendingListeners,[...path,prop]);},set(_target,prop,rawValue){throwIfProxyReleased(isProxyReleased);// FIXME: ES6 Proxy Handler `set` methods are supposed to return a
// boolean. To show good will, we return true asynchronously ¯\_(ツ)_/¯
const[value,transferables]=toWireValue(rawValue);return requestResponseMessage(ep,pendingListeners,{type:"SET"/* MessageType.SET */,path:[...path,prop].map(p=>p.toString()),value},transferables).then(fromWireValue);},apply(_target,_thisArg,rawArgumentList){throwIfProxyReleased(isProxyReleased);const last=path[path.length-1];if(last===createEndpoint){return requestResponseMessage(ep,pendingListeners,{type:"ENDPOINT"/* MessageType.ENDPOINT */}).then(fromWireValue);}// We just pretend that `bind()` didn’t happen.
if(last==="bind"){return createProxy(ep,pendingListeners,path.slice(0,-1));}const[argumentList,transferables]=processArguments(rawArgumentList);return requestResponseMessage(ep,pendingListeners,{type:"APPLY"/* MessageType.APPLY */,path:path.map(p=>p.toString()),argumentList},transferables).then(fromWireValue);},construct(_target,rawArgumentList){throwIfProxyReleased(isProxyReleased);const[argumentList,transferables]=processArguments(rawArgumentList);return requestResponseMessage(ep,pendingListeners,{type:"CONSTRUCT"/* MessageType.CONSTRUCT */,path:path.map(p=>p.toString()),argumentList},transferables).then(fromWireValue);}});registerProxy(proxy,ep);return proxy;}function myFlat(arr){return Array.prototype.concat.apply([],arr);}function processArguments(argumentList){const processed=argumentList.map(toWireValue);return[processed.map(v=>v[0]),myFlat(processed.map(v=>v[1]))];}function transfer(obj,transfers){transferCache.set(obj,transfers);return obj;}function proxy(obj){return Object.assign(obj,{[proxyMarker]:true});}function toWireValue(value){for(const[name,handler]of transferHandlers){if(handler.canHandle(value)){const[serializedValue,transferables]=handler.serialize(value);return[{type:"HANDLER"/* WireValueType.HANDLER */,name,value:serializedValue},transferables];}}return[{type:"RAW"/* WireValueType.RAW */,value},transferCache.get(value)||[]];}function fromWireValue(value){switch(value.type){case"HANDLER"/* WireValueType.HANDLER */:return transferHandlers.get(value.name).deserialize(value.value);case"RAW"/* WireValueType.RAW */:return value.value;}}function requestResponseMessage(ep,pendingListeners,msg,transfers){return new Promise(resolve=>{const id=generateUUID();pendingListeners.set(id,resolve);if(ep.start){ep.start();}ep.postMessage(Object.assign({id},msg),transfers);});}function generateUUID(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-");}/*! (c) Andrea Giammarchi - ISC */function _ended(){this._currentTime=this.duration;this._ended=true;this._startTime=NaN;this.dispatchEvent(new Event('ended'));}// vim: tabstop=8 softtabstop=0 noexpandtab shiftwidth=8 nosmarttab
// Copyright 2025 Digital Signage Bunny Corp. Use of this source code is
// governed by an MIT-style license that can be found in the LICENSE file or at
// https://opensource.org/licenses/MIT.
// REF: http://jsfiddle.net/unLSJ/
function replacer(_match,pIndent,pKey,pVal,pEnd){const key='<span class=json-key>';const val='<span class=json-value>';const str='<span class=json-string>';let r=pIndent||'';if(pKey){r=r+key+pKey.replace(/[": ]/g,'')+'</span>: ';}if(pVal){r=r+(pVal[0]=='"'?str:val)+pVal+'</span>';}return r+(pEnd||'');}function prettyPrint(obj){const jsonLine=/^( *)("[\w]+": )?("[^"]*"|[\w.+-]*)?([,[{])?$/mg;return JSON.stringify(obj,null,3).replace(/&/g,'&amp;').replace(/\\"/g,'&quot;').replace(/</g,'&lt;').replace(/>/g,'&gt;').replace(jsonLine,replacer);}function minimize(value){const obj={currentTime:value.currentTime,eventSeries:value.eventSeries,mediaList:value.mediaList,mediaCurrent:value.mediaCurrent&&{href:value.mediaCurrent.decl.href,duration:value.mediaCurrent.decl.duration,remainingTimeMs:value.mediaCurrent.remainingTimeMs},mediaNext:value.mediaNext&&{href:value.mediaNext.decl.href,duration:value.mediaNext.decl.duration,remainingTimeMs:value.mediaNext.remainingTimeMs},transition:value.transition&&{percent:value.transition.percent}};return obj;}// vim: tabstop=8 softtabstop=0 noexpandtab shiftwidth=8 nosmarttab
// Copyright 2025 Digital Signage Bunny Corp. Use of this source code is
// governed by an MIT-style license that can be found in the LICENSE file or at
// https://opensource.org/licenses/MIT.
function statFile(options){return new Promise((resolve,reject)=>{const storage=new Storage();storage.statFile(resolve,reject,options);});}function removeFile(options){return new Promise((resolve,reject)=>{const storage=new Storage();storage.removeFile(resolve,reject,options);});}function listFiles(options){return new Promise((resolve,reject)=>{const storage=new Storage();storage.listFiles(resolve,reject,options);});}function mkdir(options){return new Promise((resolve,reject)=>{const storage=new Storage();storage.mkdir(resolve,reject,options);});}// copyFile() with progress.
function downloadFile(_x4){return _downloadFile.apply(this,arguments);}// No progress API.
// TBD: Evaluate performance internal and external.
function _downloadFile(){_downloadFile=_asyncToGenerator(function*(options){const storage=new Storage();const response=yield new Promise((resolve,reject)=>{storage.downloadFile(resolve,reject,options);});yield new Promise((resolve,reject)=>{const progressString=data=>{if(typeof data.amountReceived==="number"&&typeof data.amountTotal==="number"){const percent=(100*data.amountReceived/data.amountTotal).toFixed(0);return`${data.amountReceived.toString()} of ${data.amountTotal.toString()} ${percent}%`;}return"";};const onFileStatus=data=>{console.info(JSON.stringify(data));if(data.status==="completed"){resolve();}else if(data.status==="failed"){reject();}else if(data.status==="downloading"){console.log(`PREFETCH: ASSET ${options.source} progress: ${progressString(data)}`);}};const statusOptions={ticket:response.ticket,subscribe:true};console.info(`${JSON.stringify(statusOptions)}`);storage.getDownloadFileStatus(onFileStatus,reject,statusOptions);});});return _downloadFile.apply(this,arguments);}function getMD5Hash(options){return new Promise((resolve,reject)=>{const storage=new Storage();storage.getMD5Hash(resolve,reject,options);});}function fsync(){return new Promise((resolve,reject)=>{const storage=new Storage();storage.fsync(resolve,reject);});}// vim: tabstop=8 softtabstop=0 noexpandtab shiftwidth=8 nosmarttab
// Copyright 2025 Digital Signage Bunny Corp. Use of this source code is
// governed by an MIT-style license that can be found in the LICENSE file or at
// https://opensource.org/licenses/MIT.
// Local Storage: file://internal/[FILE_PATH]
// USB Flash Drive: file://usb:[INDEX]/[FILE_PATH]
// SD Card: file://sdcard:[INDEX]/[FILE_PATH]
// Normalize stored files to unique ID and file extension.
function filenameFromIdAndHref(id,href){const url=new URL(href,location.href);const ext=url.pathname.split('.').pop();return`${id}.${ext}`;}// Convert a hex string to base64.
function hexToBase64(hex){//        return Buffer.from(hex, 'hex').toString('base64');
let base64="";for(let i=0;i<hex.length;i++){base64+=!(i-1&1)?String.fromCharCode(parseInt(hex.substring(i-1,i+1),16)):"";}return btoa(base64);}function _createLoopback(){return _createLoopback2.apply(this,arguments);}function _createLoopback2(){_createLoopback2=_asyncToGenerator(function*(){try{this.loopback1=new RTCPeerConnection();if(typeof this.loopback1==="undefined"){console.error("Failed to create loopback#1 RTCPeerConnection.");return;}this.loopback2=new RTCPeerConnection();if(typeof this.loopback2==="undefined"){console.error("Failed to create loopback#2 RTCPeerConnection.");return;}this.loopback1.onicecandidate=event=>{if(typeof this.loopback2==="undefined"){return;}// Ignore null candidate, which indicates that ICE gathering has finished.
if(!event.candidate){return;}try{this.loopback2.addIceCandidate(event.candidate);}catch(e){console.error(e);}};this.loopback2.onicecandidate=event=>{if(typeof this.loopback1==="undefined"){return;}// Ignore null candidate, which indicates that ICE gathering has finished.
if(!event.candidate){return;}try{this.loopback1.addIceCandidate(event.candidate);}catch(e){console.error(e);}};this.loopback2.ondatachannel=event=>{console.info('LOOPBACK',event);this.loopback_receive_channel=event.channel;this.loopback_receive_channel.onmessage=event=>{this.dispatchEvent(new CustomEvent("message",{detail:event.data}));};};this.loopback_send_channel=this.loopback1.createDataChannel("loopback");const offer=yield this.loopback1.createOffer();yield this.loopback1.setLocalDescription(offer);yield this.loopback2.setRemoteDescription(offer);const answer=yield this.loopback2.createAnswer();yield this.loopback2.setLocalDescription(answer);yield this.loopback1.setRemoteDescription(answer);}catch(e){console.error(e);}});return _createLoopback2.apply(this,arguments);}function _createRTCPeerConnection(peer){const new_connection=new RTCPeerConnection(this.configuration);this.connections.set(peer,new_connection);console.log("new connection",peer,new_connection);}function _createRTCDataChannels(peer,connection){console.log(`#createRTCDataChannels(${peer})`);_assertClassBrand(_RTCMesh_brand,this,_createPrimaryDataChannel).call(this,peer,connection);_assertClassBrand(_RTCMesh_brand,this,_createUserDataChannel).call(this,peer,connection);}function _createPrimaryDataChannel(peer,connection){const new_channel=connection.createDataChannel(this.label,{ordered:true,maxPacketLifeTime:1000,negotiated:true,id:0});//		new_channel.addEventListener("bufferedamountlow", (event) => {
//			console.log(event);
//		});
// Cannot re-open data channel with same id.
new_channel.addEventListener("close",event=>{console.log(event);//			queueMicrotask(() => this.close(peer));
});new_channel.addEventListener("closing",event=>{console.log(event);});new_channel.addEventListener("error",event=>{console.log(event);});new_channel.addEventListener("message",event=>{//			console.log(event);
this.dispatchEvent(new CustomEvent("message",{detail:event.data}));});new_channel.addEventListener("open",event=>{console.log(event);});this.channels.set(peer,new_channel);console.log("new channel",peer,new_channel);}function _createUserDataChannel(peer,connection){const new_channel=connection.createDataChannel(this.label,{ordered:false,maxPacketLifeTime:6000,negotiated:true,id:1});// Cannot re-open data channel with same id.
new_channel.addEventListener("close",event=>{console.log(event);this.dispatchEvent(new CustomEvent('removechannel',{detail:{id:peer}}));});new_channel.addEventListener("open",event=>{console.log(event);this.dispatchEvent(new CustomEvent('addchannel',{detail:{id:peer}}));});this.user_channels.set(peer,new_channel);console.log("new user channel",peer,new_channel);}function _destroy(_x5){return _destroy2.apply(this,arguments);}function _destroy2(){_destroy2=_asyncToGenerator(function*(id){console.log(`#destroy(${id})`);const channel=this.channels.get(id);if(channel instanceof RTCDataChannel){if(channel.readyState!=="closed"){yield new Promise(resolve=>{channel.addEventListener('close',event=>{resolve();});});channel.close();}this.channels.delete(id);}const user_channel=this.user_channels.get(id);if(user_channel instanceof RTCDataChannel){if(user_channel.readyState!=="closed"){yield new Promise(resolve=>{user_channel.addEventListener('close',event=>{resolve();});});user_channel.close();}this.user_channels.delete(id);}const connection=this.connections.get(id);if(connection instanceof RTCPeerConnection){if(connection.connectionState!=="closed"){//				await new Promise(resolve => {
//					connection.addEventListener('connectionstatechange', (event) => {
//						if(connection.connectionState === "closed") {
//							resolve();
//							return;
//						}
//						connection.close();
//					});
//				});
connection.close();}this.connections.delete(id);}});return _destroy2.apply(this,arguments);}function _webrtc_onconnectionstatechange(connection,id){switch(connection.connectionState){case'disconnected':_assertClassBrand(_RTCMesh_brand,this,_webrtc_ondisconnected).call(this,connection,id);break;}}function _webrtc_ondisconnected(connection,id){const event=new CustomEvent('disconnected',{detail:{id}});this.dispatchEvent(event);}function _webrtc_onicecandidate(connection,id,candidate){const event=new CustomEvent('icecandidate',{detail:{id,candidate}});this.dispatchEvent(event);}function utf8Count(str){const strLength=str.length;let byteLength=0;let pos=0;while(pos<strLength){let value=str.charCodeAt(pos++);if((value&0xffffff80)===0){// 1-byte
byteLength++;continue;}else if((value&0xfffff800)===0){// 2-bytes
byteLength+=2;}else{// handle surrogate pair
if(value>=0xd800&&value<=0xdbff){// high surrogate
if(pos<strLength){const extra=str.charCodeAt(pos);if((extra&0xfc00)===0xdc00){++pos;value=((value&0x3ff)<<10)+(extra&0x3ff)+0x10000;}}}if((value&0xffff0000)===0){// 3-byte
byteLength+=3;}else{// 4-byte
byteLength+=4;}}}return byteLength;}function utf8EncodeJs(str,output,outputOffset){const strLength=str.length;let offset=outputOffset;let pos=0;while(pos<strLength){let value=str.charCodeAt(pos++);if((value&0xffffff80)===0){// 1-byte
output[offset++]=value;continue;}else if((value&0xfffff800)===0){// 2-bytes
output[offset++]=value>>6&0x1f|0xc0;}else{// handle surrogate pair
if(value>=0xd800&&value<=0xdbff){// high surrogate
if(pos<strLength){const extra=str.charCodeAt(pos);if((extra&0xfc00)===0xdc00){++pos;value=((value&0x3ff)<<10)+(extra&0x3ff)+0x10000;}}}if((value&0xffff0000)===0){// 3-byte
output[offset++]=value>>12&0x0f|0xe0;output[offset++]=value>>6&0x3f|0x80;}else{// 4-byte
output[offset++]=value>>18&0x07|0xf0;output[offset++]=value>>12&0x3f|0x80;output[offset++]=value>>6&0x3f|0x80;}}output[offset++]=value&0x3f|0x80;}}// TextEncoder and TextDecoder are standardized in whatwg encoding:
// https://encoding.spec.whatwg.org/
// and available in all the modern browsers:
// https://caniuse.com/textencoder
// They are available in Node.js since v12 LTS as well:
// https://nodejs.org/api/globals.html#textencoder
function utf8EncodeTE(str,output,outputOffset){sharedTextEncoder.encodeInto(str,output.subarray(outputOffset));}function utf8Encode(str,output,outputOffset){if(str.length>TEXT_ENCODER_THRESHOLD){utf8EncodeTE(str,output,outputOffset);}else{utf8EncodeJs(str,output,outputOffset);}}function utf8DecodeJs(bytes,inputOffset,byteLength){let offset=inputOffset;const end=offset+byteLength;const units=[];let result="";while(offset<end){const byte1=bytes[offset++];if((byte1&0x80)===0){// 1 byte
units.push(byte1);}else if((byte1&0xe0)===0xc0){// 2 bytes
const byte2=bytes[offset++]&0x3f;units.push((byte1&0x1f)<<6|byte2);}else if((byte1&0xf0)===0xe0){// 3 bytes
const byte2=bytes[offset++]&0x3f;const byte3=bytes[offset++]&0x3f;units.push((byte1&0x1f)<<12|byte2<<6|byte3);}else if((byte1&0xf8)===0xf0){// 4 bytes
const byte2=bytes[offset++]&0x3f;const byte3=bytes[offset++]&0x3f;const byte4=bytes[offset++]&0x3f;let unit=(byte1&0x07)<<0x12|byte2<<0x0c|byte3<<0x06|byte4;if(unit>0xffff){unit-=0x10000;units.push(unit>>>10&0x3ff|0xd800);unit=0xdc00|unit&0x3ff;}units.push(unit);}else{units.push(byte1);}if(units.length>=CHUNK_SIZE){result+=String.fromCharCode(...units);units.length=0;}}if(units.length>0){result+=String.fromCharCode(...units);}return result;}function utf8DecodeTD(bytes,inputOffset,byteLength){const stringBytes=bytes.subarray(inputOffset,inputOffset+byteLength);return sharedTextDecoder.decode(stringBytes);}function utf8Decode(bytes,inputOffset,byteLength){if(byteLength>TEXT_DECODER_THRESHOLD){return utf8DecodeTD(bytes,inputOffset,byteLength);}else{return utf8DecodeJs(bytes,inputOffset,byteLength);}}/**
 * ExtData is used to handle Extension Types that are not registered to ExtensionCodec.
 */// DataView extension to handle int64 / uint64,
// where the actual range is 53-bits integer (a.k.a. safe integer)
function setUint64(view,offset,value){const high=value/0x100000000;const low=value;// high bits are truncated by DataView
view.setUint32(offset,high);view.setUint32(offset+4,low);}function setInt64(view,offset,value){const high=Math.floor(value/0x100000000);const low=value;// high bits are truncated by DataView
view.setUint32(offset,high);view.setUint32(offset+4,low);}function getInt64(view,offset){const high=view.getInt32(offset);const low=view.getUint32(offset+4);return high*0x100000000+low;}function getUint64(view,offset){const high=view.getUint32(offset);const low=view.getUint32(offset+4);return high*0x100000000+low;}// https://github.com/msgpack/msgpack/blob/master/spec.md#timestamp-extension-type
// 34-bit unsigned int
function encodeTimeSpecToTimestamp({sec,nsec}){if(sec>=0&&nsec>=0&&sec<=TIMESTAMP64_MAX_SEC){// Here sec >= 0 && nsec >= 0
if(nsec===0&&sec<=TIMESTAMP32_MAX_SEC){// timestamp 32 = { sec32 (unsigned) }
const rv=new Uint8Array(4);const view=new DataView(rv.buffer);view.setUint32(0,sec);return rv;}else{// timestamp 64 = { nsec30 (unsigned), sec34 (unsigned) }
const secHigh=sec/0x100000000;const secLow=sec&0xffffffff;const rv=new Uint8Array(8);const view=new DataView(rv.buffer);// nsec30 | secHigh2
view.setUint32(0,nsec<<2|secHigh&0x3);// secLow32
view.setUint32(4,secLow);return rv;}}else{// timestamp 96 = { nsec32 (unsigned), sec64 (signed) }
const rv=new Uint8Array(12);const view=new DataView(rv.buffer);view.setUint32(0,nsec);setInt64(view,4,sec);return rv;}}function encodeDateToTimeSpec(date){const msec=date.getTime();const sec=Math.floor(msec/1e3);const nsec=(msec-sec*1e3)*1e6;// Normalizes { sec, nsec } to ensure nsec is unsigned.
const nsecInSec=Math.floor(nsec/1e9);return{sec:sec+nsecInSec,nsec:nsec-nsecInSec*1e9};}function encodeTimestampExtension(object){if(object instanceof Date){const timeSpec=encodeDateToTimeSpec(object);return encodeTimeSpecToTimestamp(timeSpec);}else{return null;}}function decodeTimestampToTimeSpec(data){const view=new DataView(data.buffer,data.byteOffset,data.byteLength);// data may be 32, 64, or 96 bits
switch(data.byteLength){case 4:{// timestamp 32 = { sec32 }
const sec=view.getUint32(0);const nsec=0;return{sec,nsec};}case 8:{// timestamp 64 = { nsec30, sec34 }
const nsec30AndSecHigh2=view.getUint32(0);const secLow32=view.getUint32(4);const sec=(nsec30AndSecHigh2&0x3)*0x100000000+secLow32;const nsec=nsec30AndSecHigh2>>>2;return{sec,nsec};}case 12:{// timestamp 96 = { nsec32 (unsigned), sec64 (signed) }
const sec=getInt64(view,4);const nsec=view.getUint32(0);return{sec,nsec};}default:throw new DecodeError(`Unrecognized data size for timestamp (expected 4, 8, or 12): ${data.length}`);}}function decodeTimestampExtension(data){const timeSpec=decodeTimestampToTimeSpec(data);return new Date(timeSpec.sec*1e3+timeSpec.nsec/1e6);}function isArrayBufferLike(buffer){return buffer instanceof ArrayBuffer||typeof SharedArrayBuffer!=="undefined"&&buffer instanceof SharedArrayBuffer;}function ensureUint8Array(buffer){if(buffer instanceof Uint8Array){return buffer;}else if(ArrayBuffer.isView(buffer)){return new Uint8Array(buffer.buffer,buffer.byteOffset,buffer.byteLength);}else if(isArrayBufferLike(buffer)){return new Uint8Array(buffer);}else{// ArrayLike<number>
return Uint8Array.from(buffer);}}/**
 * It encodes `value` in the MessagePack format and
 * returns a byte buffer.
 *
 * The returned buffer is a slice of a larger `ArrayBuffer`, so you have to use its `#byteOffset` and `#byteLength` in order to convert it to another typed arrays including NodeJS `Buffer`.
 */function encode(value,options){const encoder=new Encoder(options);return encoder.encodeSharedRef(value);}function prettyByte(byte){return`${byte<0?"-":""}0x${Math.abs(byte).toString(16).padStart(2,"0")}`;}/**
 * It decodes a single MessagePack object in a buffer.
 *
 * This is a synchronous decoding function.
 * See other variants for asynchronous decoding: {@link decodeAsync}, {@link decodeStream}, or {@link decodeArrayStream}.
 *
 * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.
 * @throws {@link DecodeError} if the buffer contains invalid data.
 */function decode(buffer,options){const decoder=new Decoder(options);return decoder.decode(buffer);}// vim: tabstop=8 softtabstop=0 noexpandtab shiftwidth=8 nosmarttab
// REF: https://raft.github.io/raft.pdf
// Encapsulation of a node address and a function to send a message to it.
// §5.2: A candidate wins an election if it receives votes from a
// majority of the servers in the full cluster for the same term.
// §5.2: Each node will vote for at most one candidate in a
// given term, on a first-come-first-served basis.
// §5.2: Leaders send periodic heartbeats to all followers in
// order to maintain their authority.
// §5.2: If a follower receives no communication over a period of time
// called the election timeout, then it assumes there is no viable
// leader and begins an election to choose a new leader.
// §5.2: Raft uses randomized election timeouts to ensure that
// split votes are rare and that they are resolved quickly.
// §5.2: To begin an election, a follower increments its current
// term and transitions to candidate state.
function _resetVotes(){_classPrivateFieldSet(_votesFor,this,undefined);_classPrivateFieldSet(_votesGranted,this,0);}function _onRequestVote(msg,sendReply){if(typeof _classPrivateFieldGet(_votesFor,this)!=="undefined"&&msg.address!==_classPrivateFieldGet(_votesFor,this)){const msg=new RaftMessage(_classPrivateFieldGet(_state2,this),_classPrivateFieldGet(_leader2,this),_classPrivateFieldGet(_currentTerm,this),_classPrivateFieldGet(_address3,this),_Raft.RPC_VOTE,false);sendReply(msg.toBuffer());return;}_classPrivateFieldSet(_leader2,this,msg.address);if(_classPrivateFieldGet(_currentTerm,this)!==msg.term){_classPrivateFieldSet(_currentTerm,this,msg.term);_assertClassBrand(_Raft_brand,this,_resetVotes).call(this);}const reply=new RaftMessage(_classPrivateFieldGet(_state2,this),_classPrivateFieldGet(_leader2,this),_classPrivateFieldGet(_currentTerm,this),_classPrivateFieldGet(_address3,this),_Raft.RPC_VOTE,true);sendReply(reply.toBuffer());_classPrivateFieldSet(_electionExpiration,this,performance.now()+_assertClassBrand(_Raft_brand,this,_electionTimeout).call(this));}function _onVote(msg){if(_classPrivateFieldGet(_state2,this)!==_Raft.CANDIDATE){return;}if(msg.granted){var _this$votesGranted,_this$votesGranted2;_classPrivateFieldSet(_votesGranted,this,(_this$votesGranted=_classPrivateFieldGet(_votesGranted,this),_this$votesGranted2=_this$votesGranted++,_this$votesGranted)),_this$votesGranted2;}// §5.2: A candidate wins an election if it receives votes from
// a majority of the servers in the full cluster for the same
// term.
if(_assertClassBrand(_Raft_brand,this,_hasQuorum).call(this,_classPrivateFieldGet(_votesGranted,this))){// §5.2: Once a candidate wins an election, it becomes
// leader.
_assertClassBrand(_Raft_brand,this,_becomeLeader).call(this);}}function _becomeLeader(){_classPrivateFieldSet(_state2,this,_Raft.LEADER);_classPrivateFieldSet(_leader2,this,_classPrivateFieldGet(_address3,this));_classPrivateFieldSet(_heartbeatExpiration,this,performance.now()+_classPrivateFieldGet(_heatbeatInterval,this));_classPrivateFieldSet(_electionExpiration,this,undefined);// §5.2: Send heartbeat messages to all of the other servers to
// establish its authority and prevent new elections.
const reply=new RaftMessage(_classPrivateFieldGet(_state2,this),_classPrivateFieldGet(_leader2,this),_classPrivateFieldGet(_currentTerm,this),_classPrivateFieldGet(_address3,this),_Raft.RPC_APPEND_ENTRY);_assertClassBrand(_Raft_brand,this,_sendRaftMessage).call(this,_Raft.FOLLOWER,reply);}function _hasQuorum(vote_count){return vote_count>=_assertClassBrand(_Raft_brand,this,_majorityCount).call(this);}function _majorityCount(){return Math.ceil(_classPrivateFieldGet(_nodes,this).length/2)+1;}function _onHeartbeatExpiration(){if(_classPrivateFieldGet(_state2,this)!==_Raft.LEADER){_classPrivateFieldSet(_heartbeatExpiration,this,undefined);return;}const msg=new RaftMessage(_classPrivateFieldGet(_state2,this),_classPrivateFieldGet(_leader2,this),_classPrivateFieldGet(_currentTerm,this),_classPrivateFieldGet(_address3,this),_Raft.RPC_APPEND_ENTRY);_assertClassBrand(_Raft_brand,this,_sendRaftMessage).call(this,_Raft.FOLLOWER,msg);_classPrivateFieldSet(_heartbeatExpiration,this,performance.now()+_classPrivateFieldGet(_heatbeatInterval,this));}function _onElectionExpiration(){if(_classPrivateFieldGet(_state2,this)===_Raft.LEADER){_classPrivateFieldSet(_electionExpiration,this,undefined);return;}_assertClassBrand(_Raft_brand,this,_startElection).call(this);}function _sendRaftMessage(target,msg){//		console.log(`#sendRaftMessage(${Raft.states[target]}, ${msg.toString()})`);
const data=msg.toBuffer();switch(target){case _Raft.FOLLOWER:for(const node of _classPrivateFieldGet(_nodes,this)){if(node.address===_classPrivateFieldGet(_leader2,this)){continue;}node.send(data);}break;}}function _electionTimeout(){return Math.random()*(_classPrivateFieldGet(_electionMaxTimeout,this)-_classPrivateFieldGet(_electionMinTimeout,this)+1)+_classPrivateFieldGet(_electionMinTimeout,this);}function _startElection(){var _this$currentTerm,_this$currentTerm2;//		console.log("#startElection");
if(_classPrivateFieldGet(_state2,this)!==_Raft.CANDIDATE){_classPrivateFieldSet(_state2,this,_Raft.CANDIDATE);}_classPrivateFieldSet(_heartbeatExpiration,this,undefined);_classPrivateFieldSet(_electionExpiration,this,performance.now()+_assertClassBrand(_Raft_brand,this,_electionTimeout).call(this));_classPrivateFieldSet(_leader2,this,undefined);_classPrivateFieldSet(_currentTerm,this,(_this$currentTerm=_classPrivateFieldGet(_currentTerm,this),_this$currentTerm2=_this$currentTerm++,_this$currentTerm)),_this$currentTerm2;// §5.2: Vote for self.
_classPrivateFieldSet(_votesFor,this,_classPrivateFieldGet(_address3,this));_classPrivateFieldSet(_votesGranted,this,1);// §5.2: Issues RequestVote RPCs in parallel to each of
// the other nodes in the cluster.
const msg=new RaftMessage(_classPrivateFieldGet(_state2,this),_classPrivateFieldGet(_leader2,this),_classPrivateFieldGet(_currentTerm,this),_classPrivateFieldGet(_address3,this),_Raft.RPC_REQUEST_VOTE);_assertClassBrand(_Raft_brand,this,_sendRaftMessage).call(this,_Raft.FOLLOWER,msg);}// a random integer between two values, inclusive
function backoff_timeout(){return Math.floor(Math.random()*(MAX_BACKOFF_TIMEOUT-MIN_BACKOFF_TIMEOUT+1))+MIN_BACKOFF_TIMEOUT;}return{setters:[],execute:function(){AsyncGenerator.prototype["function"==typeof Symbol&&Symbol.asyncIterator||"@@asyncIterator"]=function(){return this;},AsyncGenerator.prototype.next=function(e){return this._invoke("next",e);},AsyncGenerator.prototype.throw=function(e){return this._invoke("throw",e);},AsyncGenerator.prototype.return=function(e){return this._invoke("return",e);};/**
 * @license
 * Copyright 2019 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */t$2=globalThis,e$4=t$2.ShadowRoot&&(void 0===t$2.ShadyCSS||t$2.ShadyCSS.nativeShadow)&&"adoptedStyleSheets"in Document.prototype&&"replace"in CSSStyleSheet.prototype,s$2=Symbol(),o$4=new WeakMap();n$3=class n{constructor(t,e,o){if(this._$cssResult$=true,o!==s$2)throw Error("CSSResult is not constructable. Use `unsafeCSS` or `css` instead.");this.cssText=t,this.t=e;}get styleSheet(){let t=this.o;const s=this.t;if(e$4&&void 0===t){const e=void 0!==s&&1===s.length;e&&(t=o$4.get(s)),void 0===t&&((this.o=t=new CSSStyleSheet()).replaceSync(this.cssText),e&&o$4.set(s,t));}return t;}toString(){return this.cssText;}};r$3=t=>new n$3("string"==typeof t?t:t+"",void 0,s$2),i$3=(t,...e)=>{const o=1===t.length?t[0]:e.reduce((e,s,o)=>e+(t=>{if(true===t._$cssResult$)return t.cssText;if("number"==typeof t)return t;throw Error("Value passed to 'css' function must be a 'css' function result: "+t+". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.");})(s)+t[o+1],t[0]);return new n$3(o,t,s$2);},S$1=(s,o)=>{if(e$4)s.adoptedStyleSheets=o.map(t=>t instanceof CSSStyleSheet?t:t.styleSheet);else for(const e of o){const o=document.createElement("style"),n=t$2.litNonce;void 0!==n&&o.setAttribute("nonce",n),o.textContent=e.cssText,s.appendChild(o);}},c$2=e$4?t=>t:t=>t instanceof CSSStyleSheet?(t=>{let e="";for(const s of t.cssRules)e+=s.cssText;return r$3(e);})(t):t;/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */({is:i$2,defineProperty:e$3,getOwnPropertyDescriptor:h$1,getOwnPropertyNames:r$2,getOwnPropertySymbols:o$3,getPrototypeOf:n$2}=Object),a$1=globalThis,c$1=a$1.trustedTypes,l$1=c$1?c$1.emptyScript:"",p$1=a$1.reactiveElementPolyfillSupport,d$1=(t,s)=>t,u$1={toAttribute(t,s){switch(s){case Boolean:t=t?l$1:null;break;case Object:case Array:t=null==t?t:JSON.stringify(t);}return t;},fromAttribute(t,s){let i=t;switch(s){case Boolean:i=null!==t;break;case Number:i=null===t?null:Number(t);break;case Object:case Array:try{i=JSON.parse(t);}catch(t){i=null;}}return i;}},f$1=(t,s)=>!i$2(t,s),b={attribute:true,type:String,converter:u$1,reflect:false,useDefault:false,hasChanged:f$1};(_Symbol$metadata=Symbol.metadata)!==null&&_Symbol$metadata!==void 0?_Symbol$metadata:Symbol.metadata=Symbol("metadata"),(_a$1$litPropertyMetad=a$1.litPropertyMetadata)!==null&&_a$1$litPropertyMetad!==void 0?_a$1$litPropertyMetad:a$1.litPropertyMetadata=new WeakMap();y$1=class y extends HTMLElement{static addInitializer(t){var _this$l;this._$Ei(),((_this$l=this.l)!==null&&_this$l!==void 0?_this$l:this.l=[]).push(t);}static get observedAttributes(){return this.finalize(),this._$Eh&&[...this._$Eh.keys()];}static createProperty(t,s=b){if(s.state&&(s.attribute=false),this._$Ei(),this.prototype.hasOwnProperty(t)&&((s=Object.create(s)).wrapped=true),this.elementProperties.set(t,s),!s.noAccessor){const i=Symbol(),h=this.getPropertyDescriptor(t,i,s);void 0!==h&&e$3(this.prototype,t,h);}}static getPropertyDescriptor(t,s,i){var _h$;const{get:e,set:r}=(_h$=h$1(this.prototype,t))!==null&&_h$!==void 0?_h$:{get(){return this[s];},set(t){this[s]=t;}};return{get:e,set(s){const h=e===null||e===void 0?void 0:e.call(this);r!==null&&r!==void 0&&r.call(this,s),this.requestUpdate(t,h,i);},configurable:true,enumerable:true};}static getPropertyOptions(t){var _this$elementProperti;return(_this$elementProperti=this.elementProperties.get(t))!==null&&_this$elementProperti!==void 0?_this$elementProperti:b;}static _$Ei(){if(this.hasOwnProperty(d$1("elementProperties")))return;const t=n$2(this);t.finalize(),void 0!==t.l&&(this.l=[...t.l]),this.elementProperties=new Map(t.elementProperties);}static finalize(){if(this.hasOwnProperty(d$1("finalized")))return;if(this.finalized=true,this._$Ei(),this.hasOwnProperty(d$1("properties"))){const t=this.properties,s=[...r$2(t),...o$3(t)];for(const i of s)this.createProperty(i,t[i]);}const t=this[Symbol.metadata];if(null!==t){const s=litPropertyMetadata.get(t);if(void 0!==s)for(const[t,i]of s)this.elementProperties.set(t,i);}this._$Eh=new Map();for(const[t,s]of this.elementProperties){const i=this._$Eu(t,s);void 0!==i&&this._$Eh.set(i,t);}this.elementStyles=this.finalizeStyles(this.styles);}static finalizeStyles(s){const i=[];if(Array.isArray(s)){const e=new Set(s.flat(1/0).reverse());for(const s of e)i.unshift(c$2(s));}else void 0!==s&&i.push(c$2(s));return i;}static _$Eu(t,s){const i=s.attribute;return false===i?void 0:"string"==typeof i?i:"string"==typeof t?t.toLowerCase():void 0;}constructor(){super(),this._$Ep=void 0,this.isUpdatePending=false,this.hasUpdated=false,this._$Em=null,this._$Ev();}_$Ev(){var _this$constructor$l;this._$ES=new Promise(t=>this.enableUpdating=t),this._$AL=new Map(),this._$E_(),this.requestUpdate(),(_this$constructor$l=this.constructor.l)===null||_this$constructor$l===void 0?void 0:_this$constructor$l.forEach(t=>t(this));}addController(t){var _this$_$EO,_t$hostConnected;((_this$_$EO=this._$EO)!==null&&_this$_$EO!==void 0?_this$_$EO:this._$EO=new Set()).add(t),void 0!==this.renderRoot&&this.isConnected&&((_t$hostConnected=t.hostConnected)===null||_t$hostConnected===void 0?void 0:_t$hostConnected.call(t));}removeController(t){var _this$_$EO2;(_this$_$EO2=this._$EO)===null||_this$_$EO2===void 0||_this$_$EO2.delete(t);}_$E_(){const t=new Map(),s=this.constructor.elementProperties;for(const i of s.keys())this.hasOwnProperty(i)&&(t.set(i,this[i]),delete this[i]);t.size>0&&(this._$Ep=t);}createRenderRoot(){var _this$shadowRoot;const t=(_this$shadowRoot=this.shadowRoot)!==null&&_this$shadowRoot!==void 0?_this$shadowRoot:this.attachShadow(this.constructor.shadowRootOptions);return S$1(t,this.constructor.elementStyles),t;}connectedCallback(){var _this$renderRoot,_this$_$EO3;(_this$renderRoot=this.renderRoot)!==null&&_this$renderRoot!==void 0?_this$renderRoot:this.renderRoot=this.createRenderRoot(),this.enableUpdating(true),(_this$_$EO3=this._$EO)===null||_this$_$EO3===void 0?void 0:_this$_$EO3.forEach(t=>{var _t$hostConnected2;return(_t$hostConnected2=t.hostConnected)===null||_t$hostConnected2===void 0?void 0:_t$hostConnected2.call(t);});}enableUpdating(t){}disconnectedCallback(){var _this$_$EO4;(_this$_$EO4=this._$EO)===null||_this$_$EO4===void 0||_this$_$EO4.forEach(t=>{var _t$hostDisconnected;return(_t$hostDisconnected=t.hostDisconnected)===null||_t$hostDisconnected===void 0?void 0:_t$hostDisconnected.call(t);});}attributeChangedCallback(t,s,i){this._$AK(t,i);}_$ET(t,s){const i=this.constructor.elementProperties.get(t),e=this.constructor._$Eu(t,i);if(void 0!==e&&true===i.reflect){var _i$converter;const h=(void 0!==((_i$converter=i.converter)===null||_i$converter===void 0?void 0:_i$converter.toAttribute)?i.converter:u$1).toAttribute(s,i.type);this._$Em=t,null==h?this.removeAttribute(e):this.setAttribute(e,h),this._$Em=null;}}_$AK(t,s){const i=this.constructor,e=i._$Eh.get(t);if(void 0!==e&&this._$Em!==e){var _t$converter,_ref,_h$fromAttribute,_this$_$Ej;const t=i.getPropertyOptions(e),h="function"==typeof t.converter?{fromAttribute:t.converter}:void 0!==((_t$converter=t.converter)===null||_t$converter===void 0?void 0:_t$converter.fromAttribute)?t.converter:u$1;this._$Em=e,this[e]=(_ref=(_h$fromAttribute=h.fromAttribute(s,t.type))!==null&&_h$fromAttribute!==void 0?_h$fromAttribute:(_this$_$Ej=this._$Ej)===null||_this$_$Ej===void 0?void 0:_this$_$Ej.get(e))!==null&&_ref!==void 0?_ref:null,this._$Em=null;}}requestUpdate(t,s,i){if(void 0!==t){var _i$hasChanged,_this$_$Ej2;const e=this.constructor,h=this[t];if(i!==null&&i!==void 0?i:i=e.getPropertyOptions(t),!(((_i$hasChanged=i.hasChanged)!==null&&_i$hasChanged!==void 0?_i$hasChanged:f$1)(h,s)||i.useDefault&&i.reflect&&h===((_this$_$Ej2=this._$Ej)===null||_this$_$Ej2===void 0?void 0:_this$_$Ej2.get(t))&&!this.hasAttribute(e._$Eu(t,i))))return;this.C(t,s,i);}false===this.isUpdatePending&&(this._$ES=this._$EP());}C(t,s,{useDefault:i,reflect:e,wrapped:h},r){var _this$_$Ej3,_ref2,_this$_$Eq;i&&!((_this$_$Ej3=this._$Ej)!==null&&_this$_$Ej3!==void 0?_this$_$Ej3:this._$Ej=new Map()).has(t)&&(this._$Ej.set(t,(_ref2=r!==null&&r!==void 0?r:s)!==null&&_ref2!==void 0?_ref2:this[t]),true!==h||void 0!==r)||(this._$AL.has(t)||(this.hasUpdated||i||(s=void 0),this._$AL.set(t,s)),true===e&&this._$Em!==t&&((_this$_$Eq=this._$Eq)!==null&&_this$_$Eq!==void 0?_this$_$Eq:this._$Eq=new Set()).add(t));}_$EP(){var _this2=this;return _asyncToGenerator(function*(){_this2.isUpdatePending=true;try{yield _this2._$ES;}catch(t){Promise.reject(t);}const t=_this2.scheduleUpdate();return null!=t&&(yield t),!_this2.isUpdatePending;})();}scheduleUpdate(){return this.performUpdate();}performUpdate(){if(!this.isUpdatePending)return;if(!this.hasUpdated){var _this$renderRoot2;if((_this$renderRoot2=this.renderRoot)!==null&&_this$renderRoot2!==void 0?_this$renderRoot2:this.renderRoot=this.createRenderRoot(),this._$Ep){for(const[t,s]of this._$Ep)this[t]=s;this._$Ep=void 0;}const t=this.constructor.elementProperties;if(t.size>0)for(const[s,i]of t){const{wrapped:t}=i,e=this[s];true!==t||this._$AL.has(s)||void 0===e||this.C(s,void 0,i,e);}}let t=false;const s=this._$AL;try{var _this$_$EO5;t=this.shouldUpdate(s),t?(this.willUpdate(s),(_this$_$EO5=this._$EO)!==null&&_this$_$EO5!==void 0&&_this$_$EO5.forEach(t=>{var _t$hostUpdate;return(_t$hostUpdate=t.hostUpdate)===null||_t$hostUpdate===void 0?void 0:_t$hostUpdate.call(t);}),this.update(s)):this._$EM();}catch(s){throw t=false,this._$EM(),s;}t&&this._$AE(s);}willUpdate(t){}_$AE(t){var _this$_$EO6;(_this$_$EO6=this._$EO)!==null&&_this$_$EO6!==void 0&&_this$_$EO6.forEach(t=>{var _t$hostUpdated;return(_t$hostUpdated=t.hostUpdated)===null||_t$hostUpdated===void 0?void 0:_t$hostUpdated.call(t);}),this.hasUpdated||(this.hasUpdated=true,this.firstUpdated(t)),this.updated(t);}_$EM(){this._$AL=new Map(),this.isUpdatePending=false;}get updateComplete(){return this.getUpdateComplete();}getUpdateComplete(){return this._$ES;}shouldUpdate(t){return true;}update(t){this._$Eq&&(this._$Eq=this._$Eq.forEach(t=>this._$ET(t,this[t]))),this._$EM();}updated(t){}firstUpdated(t){}};y$1.elementStyles=[],y$1.shadowRootOptions={mode:"open"},y$1[d$1("elementProperties")]=new Map(),y$1[d$1("finalized")]=new Map(),p$1!==null&&p$1!==void 0&&p$1({ReactiveElement:y$1}),((_a$1$reactiveElementV=a$1.reactiveElementVersions)!==null&&_a$1$reactiveElementV!==void 0?_a$1$reactiveElementV:a$1.reactiveElementVersions=[]).push("2.1.0");/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */t$1=globalThis,i$1=t$1.trustedTypes,s$1=i$1?i$1.createPolicy("lit-html",{createHTML:t=>t}):void 0,e$2="$lit$",h=`lit$${Math.random().toFixed(9).slice(2)}$`,o$2="?"+h,n$1=`<${o$2}>`,r$1=document,l=()=>r$1.createComment(""),c=t=>null===t||"object"!=typeof t&&"function"!=typeof t,a=Array.isArray,u=t=>a(t)||"function"==typeof(t===null||t===void 0?void 0:t[Symbol.iterator]),d="[ \t\n\f\r]",f=/<(?:(!--|\/[^a-zA-Z])|(\/?[a-zA-Z][^>\s]*)|(\/?$))/g,v=/-->/g,_=/>/g,m=RegExp(`>|${d}(?:([^\\s"'>=/]+)(${d}*=${d}*(?:[^ \t\n\f\r"'\`<>=]|("|')|))|$)`,"g"),p=/'/g,g=/"/g,$=/^(?:script|style|textarea|title)$/i,y=t=>(i,...s)=>({_$litType$:t,strings:i,values:s}),x=y(1),T=Symbol.for("lit-noChange"),E=Symbol.for("lit-nothing"),A=new WeakMap(),C=r$1.createTreeWalker(r$1,129);V=(t,i)=>{const s=t.length-1,o=[];let r,l=2===i?"<svg>":3===i?"<math>":"",c=f;for(let i=0;i<s;i++){const s=t[i];let a,u,d=-1,y=0;for(;y<s.length&&(c.lastIndex=y,u=c.exec(s),null!==u);)y=c.lastIndex,c===f?"!--"===u[1]?c=v:void 0!==u[1]?c=_:void 0!==u[2]?($.test(u[2])&&(r=RegExp("</"+u[2],"g")),c=m):void 0!==u[3]&&(c=m):c===m?">"===u[0]?(c=r!==null&&r!==void 0?r:f,d=-1):void 0===u[1]?d=-2:(d=c.lastIndex-u[2].length,a=u[1],c=void 0===u[3]?m:'"'===u[3]?g:p):c===g||c===p?c=m:c===v||c===_?c=f:(c=m,r=void 0);const x=c===m&&t[i+1].startsWith("/>")?" ":"";l+=c===f?s+n$1:d>=0?(o.push(a),s.slice(0,d)+e$2+s.slice(d)+h+x):s+h+(-2===d?i:x);}return[P(t,l+(t[s]||"<?>")+(2===i?"</svg>":3===i?"</math>":"")),o];};N=class N{constructor({strings:t,_$litType$:s},n){let r;this.parts=[];let c=0,a=0;const u=t.length-1,d=this.parts,[f,v]=V(t,s);if(this.el=N.createElement(f,n),C.currentNode=this.el.content,2===s||3===s){const t=this.el.content.firstChild;t.replaceWith(...t.childNodes);}for(;null!==(r=C.nextNode())&&d.length<u;){if(1===r.nodeType){if(r.hasAttributes())for(const t of r.getAttributeNames())if(t.endsWith(e$2)){const i=v[a++],s=r.getAttribute(t).split(h),e=/([.?@])?(.*)/.exec(i);d.push({type:1,index:c,name:e[2],strings:s,ctor:"."===e[1]?H:"?"===e[1]?I:"@"===e[1]?L:k}),r.removeAttribute(t);}else t.startsWith(h)&&(d.push({type:6,index:c}),r.removeAttribute(t));if($.test(r.tagName)){const t=r.textContent.split(h),s=t.length-1;if(s>0){r.textContent=i$1?i$1.emptyScript:"";for(let i=0;i<s;i++)r.append(t[i],l()),C.nextNode(),d.push({type:2,index:++c});r.append(t[s],l());}}}else if(8===r.nodeType)if(r.data===o$2)d.push({type:2,index:c});else{let t=-1;for(;-1!==(t=r.data.indexOf(h,t+1));)d.push({type:7,index:c}),t+=h.length-1;}c++;}}static createElement(t,i){const s=r$1.createElement("template");return s.innerHTML=t,s;}};M=class M{constructor(t,i){this._$AV=[],this._$AN=void 0,this._$AD=t,this._$AM=i;}get parentNode(){return this._$AM.parentNode;}get _$AU(){return this._$AM._$AU;}u(t){var _t$creationScope;const{el:{content:i},parts:s}=this._$AD,e=((_t$creationScope=t===null||t===void 0?void 0:t.creationScope)!==null&&_t$creationScope!==void 0?_t$creationScope:r$1).importNode(i,true);C.currentNode=e;let h=C.nextNode(),o=0,n=0,l=s[0];for(;void 0!==l;){var _l;if(o===l.index){let i;2===l.type?i=new R(h,h.nextSibling,this,t):1===l.type?i=new l.ctor(h,l.name,l.strings,this,t):6===l.type&&(i=new z(h,this,t)),this._$AV.push(i),l=s[++n];}o!==((_l=l)===null||_l===void 0?void 0:_l.index)&&(h=C.nextNode(),o++);}return C.currentNode=r$1,e;}p(t){let i=0;for(const s of this._$AV)void 0!==s&&(void 0!==s.strings?(s._$AI(t,s,i),i+=s.strings.length-2):s._$AI(t[i])),i++;}};R=class R{get _$AU(){var _this$_$AM$_$AU,_this$_$AM;return(_this$_$AM$_$AU=(_this$_$AM=this._$AM)===null||_this$_$AM===void 0?void 0:_this$_$AM._$AU)!==null&&_this$_$AM$_$AU!==void 0?_this$_$AM$_$AU:this._$Cv;}constructor(t,i,s,e){var _e$isConnected;this.type=2,this._$AH=E,this._$AN=void 0,this._$AA=t,this._$AB=i,this._$AM=s,this.options=e,this._$Cv=(_e$isConnected=e===null||e===void 0?void 0:e.isConnected)!==null&&_e$isConnected!==void 0?_e$isConnected:true;}get parentNode(){var _t;let t=this._$AA.parentNode;const i=this._$AM;return void 0!==i&&11===((_t=t)===null||_t===void 0?void 0:_t.nodeType)&&(t=i.parentNode),t;}get startNode(){return this._$AA;}get endNode(){return this._$AB;}_$AI(t,i=this){t=S(this,t,i),c(t)?t===E||null==t||""===t?(this._$AH!==E&&this._$AR(),this._$AH=E):t!==this._$AH&&t!==T&&this._(t):void 0!==t._$litType$?this.$(t):void 0!==t.nodeType?this.T(t):u(t)?this.k(t):this._(t);}O(t){return this._$AA.parentNode.insertBefore(t,this._$AB);}T(t){this._$AH!==t&&(this._$AR(),this._$AH=this.O(t));}_(t){this._$AH!==E&&c(this._$AH)?this._$AA.nextSibling.data=t:this.T(r$1.createTextNode(t)),this._$AH=t;}$(t){var _this$_$AH;const{values:i,_$litType$:s}=t,e="number"==typeof s?this._$AC(t):(void 0===s.el&&(s.el=N.createElement(P(s.h,s.h[0]),this.options)),s);if(((_this$_$AH=this._$AH)===null||_this$_$AH===void 0?void 0:_this$_$AH._$AD)===e)this._$AH.p(i);else{const t=new M(e,this),s=t.u(this.options);t.p(i),this.T(s),this._$AH=t;}}_$AC(t){let i=A.get(t.strings);return void 0===i&&A.set(t.strings,i=new N(t)),i;}k(t){a(this._$AH)||(this._$AH=[],this._$AR());const i=this._$AH;let s,e=0;for(const h of t)e===i.length?i.push(s=new R(this.O(l()),this.O(l()),this,this.options)):s=i[e],s._$AI(h),e++;e<i.length&&(this._$AR(s&&s._$AB.nextSibling,e),i.length=e);}_$AR(t=this._$AA.nextSibling,i){for((_this$_$AP=this._$AP)===null||_this$_$AP===void 0?void 0:_this$_$AP.call(this,false,true,i);t&&t!==this._$AB;){var _this$_$AP;const i=t.nextSibling;t.remove(),t=i;}}setConnected(t){var _this$_$AP2;void 0===this._$AM&&(this._$Cv=t,(_this$_$AP2=this._$AP)===null||_this$_$AP2===void 0?void 0:_this$_$AP2.call(this,t));}};k=class k{get tagName(){return this.element.tagName;}get _$AU(){return this._$AM._$AU;}constructor(t,i,s,e,h){this.type=1,this._$AH=E,this._$AN=void 0,this.element=t,this.name=i,this._$AM=e,this.options=h,s.length>2||""!==s[0]||""!==s[1]?(this._$AH=Array(s.length-1).fill(new String()),this.strings=s):this._$AH=E;}_$AI(t,i=this,s,e){const h=this.strings;let o=false;if(void 0===h)t=S(this,t,i,0),o=!c(t)||t!==this._$AH&&t!==T,o&&(this._$AH=t);else{const e=t;let n,r;for(t=h[0],n=0;n<h.length-1;n++)r=S(this,e[s+n],i,n),r===T&&(r=this._$AH[n]),o||(o=!c(r)||r!==this._$AH[n]),r===E?t=E:t!==E&&(t+=(r!==null&&r!==void 0?r:"")+h[n+1]),this._$AH[n]=r;}o&&!e&&this.j(t);}j(t){t===E?this.element.removeAttribute(this.name):this.element.setAttribute(this.name,t!==null&&t!==void 0?t:"");}};H=class H extends k{constructor(){super(...arguments),this.type=3;}j(t){this.element[this.name]=t===E?void 0:t;}};I=class I extends k{constructor(){super(...arguments),this.type=4;}j(t){this.element.toggleAttribute(this.name,!!t&&t!==E);}};L=class L extends k{constructor(t,i,s,e,h){super(t,i,s,e,h),this.type=5;}_$AI(t,i=this){var _S;if((t=(_S=S(this,t,i,0))!==null&&_S!==void 0?_S:E)===T)return;const s=this._$AH,e=t===E&&s!==E||t.capture!==s.capture||t.once!==s.once||t.passive!==s.passive,h=t!==E&&(s===E||e);e&&this.element.removeEventListener(this.name,this,s),h&&this.element.addEventListener(this.name,this,t),this._$AH=t;}handleEvent(t){var _this$options$host,_this$options;"function"==typeof this._$AH?this._$AH.call((_this$options$host=(_this$options=this.options)===null||_this$options===void 0?void 0:_this$options.host)!==null&&_this$options$host!==void 0?_this$options$host:this.element,t):this._$AH.handleEvent(t);}};z=class z{constructor(t,i,s){this.element=t,this.type=6,this._$AN=void 0,this._$AM=i,this.options=s;}get _$AU(){return this._$AM._$AU;}_$AI(t){S(this,t);}};j=t$1.litHtmlPolyfillSupport;j!==null&&j!==void 0&&j(N,R),((_t$1$litHtmlVersions=t$1.litHtmlVersions)!==null&&_t$1$litHtmlVersions!==void 0?_t$1$litHtmlVersions:t$1.litHtmlVersions=[]).push("3.3.0");B=(t,i,s)=>{var _s$renderBefore;const e=(_s$renderBefore=s===null||s===void 0?void 0:s.renderBefore)!==null&&_s$renderBefore!==void 0?_s$renderBefore:i;let h=e._$litPart$;if(void 0===h){var _s$renderBefore2;const t=(_s$renderBefore2=s===null||s===void 0?void 0:s.renderBefore)!==null&&_s$renderBefore2!==void 0?_s$renderBefore2:null;e._$litPart$=h=new R(i.insertBefore(l(),t),t,void 0,s!==null&&s!==void 0?s:{});}return h._$AI(t),h;};/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */s=globalThis;i=class i extends y$1{constructor(){super(...arguments),this.renderOptions={host:this},this._$Do=void 0;}createRenderRoot(){var _this$renderOptions,_this$renderOptions$r;const t=super.createRenderRoot();return(_this$renderOptions$r=(_this$renderOptions=this.renderOptions).renderBefore)!==null&&_this$renderOptions$r!==void 0?_this$renderOptions$r:_this$renderOptions.renderBefore=t.firstChild,t;}update(t){const r=this.render();this.hasUpdated||(this.renderOptions.isConnected=this.isConnected),super.update(t),this._$Do=B(r,this.renderRoot,this.renderOptions);}connectedCallback(){var _this$_$Do;super.connectedCallback(),(_this$_$Do=this._$Do)===null||_this$_$Do===void 0?void 0:_this$_$Do.setConnected(true);}disconnectedCallback(){var _this$_$Do2;super.disconnectedCallback(),(_this$_$Do2=this._$Do)===null||_this$_$Do2===void 0?void 0:_this$_$Do2.setConnected(false);}render(){return T;}};i._$litElement$=true,i["finalized"]=true,(_s$litElementHydrateS=s.litElementHydrateSupport)===null||_s$litElementHydrateS===void 0?void 0:_s$litElementHydrateS.call(s,{LitElement:i});o$1=s.litElementPolyfillSupport;o$1===null||o$1===void 0||o$1({LitElement:i});((_s$litElementVersions=s.litElementVersions)!==null&&_s$litElementVersions!==void 0?_s$litElementVersions:s.litElementVersions=[]).push("4.2.0");/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */t=t=>(e,o)=>{void 0!==o?o.addInitializer(()=>{customElements.define(t,e);}):customElements.define(t,e);};/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */o={attribute:true,type:String,converter:u$1,reflect:false,hasChanged:f$1},r=(t=o,e,r)=>{const{kind:n,metadata:i}=r;let s=globalThis.litPropertyMetadata.get(i);if(void 0===s&&globalThis.litPropertyMetadata.set(i,s=new Map()),"setter"===n&&((t=Object.create(t)).wrapped=true),s.set(r.name,t),"accessor"===n){const{name:o}=r;return{set(r){const n=e.get.call(this);e.set.call(this,r),this.requestUpdate(o,n,t);},init(e){return void 0!==e&&this.C(o,void 0,t,e),e;}};}if("setter"===n){const{name:o}=r;return function(r){const n=this[o];e.call(this,r),this.requestUpdate(o,n,t);};}throw Error("Unsupported decorator location: "+n);};e$1=(e,t,c)=>(c.configurable=true,c.enumerable=true,c);proxyMarker=Symbol("Comlink.proxy");createEndpoint=Symbol("Comlink.endpoint");releaseProxy=Symbol("Comlink.releaseProxy");finalizer=Symbol("Comlink.finalizer");throwMarker=Symbol("Comlink.thrown");isObject=val=>typeof val==="object"&&val!==null||typeof val==="function";/**
 * Internal transfer handle to handle objects marked to proxy.
 */proxyTransferHandler={canHandle:val=>isObject(val)&&val[proxyMarker],serialize(obj){const{port1,port2}=new MessageChannel();expose(obj,port1);return[port2,[port2]];},deserialize(port){port.start();return wrap(port);}};/**
 * Internal transfer handler to handle thrown exceptions.
 */throwTransferHandler={canHandle:value=>isObject(value)&&throwMarker in value,serialize({value}){let serialized;if(value instanceof Error){serialized={isError:true,value:{message:value.message,name:value.name,stack:value.stack}};}else{serialized={isError:false,value};}return[serialized,[]];},deserialize(serialized){if(serialized.isError){throw Object.assign(new Error(serialized.value.message),serialized.value);}throw serialized.value;}};/**
 * Allows customizing the serialization of certain values.
 */transferHandlers=new Map([["proxy",proxyTransferHandler],["throw",throwTransferHandler]]);proxyCounter=new WeakMap();proxyFinalizers="FinalizationRegistry"in globalThis&&new FinalizationRegistry(ep=>{const newCount=(proxyCounter.get(ep)||0)-1;proxyCounter.set(ep,newCount);if(newCount===0){releaseEndpoint(ep);}});transferCache=new WeakMap();self$1={};try{self$1.EventTarget=new EventTarget().constructor;}catch(EventTarget){(function(Object,wm){var create=Object.create;var defineProperty=Object.defineProperty;var proto=EventTarget.prototype;define(proto,'addEventListener',function(type,listener,options){for(var secret=wm.get(this),listeners=secret[type]||(secret[type]=[]),i=0,length=listeners.length;i<length;i++){if(listeners[i].listener===listener)return;}listeners.push({target:this,listener:listener,options:options});});define(proto,'dispatchEvent',function(event){var secret=wm.get(this);var listeners=secret[event.type];if(listeners){define(event,'target',this);define(event,'currentTarget',this);listeners.slice(0).some(dispatch,event);delete event.currentTarget;delete event.target;}return true;});define(proto,'removeEventListener',function(type,listener){for(var secret=wm.get(this),/* istanbul ignore next */listeners=secret[type]||(secret[type]=[]),i=0,length=listeners.length;i<length;i++){if(listeners[i].listener===listener){listeners.splice(i,1);return;}}});self$1.EventTarget=EventTarget;function EventTarget(){wm.set(this,create(null));}function define(target,name,value){defineProperty(target,name,{configurable:true,writable:true,value:value});}function dispatch(info){var options=info.options;if(options&&options.once)info.target.removeEventListener(this.type,info.listener);if(typeof info.listener==='function')info.listener.call(info.target,this);else info.listener.handleEvent(this);return this._stopImmediatePropagationFlag;}})(Object,new WeakMap());}EventTarget$1=self$1.EventTarget;// vim: tabstop=8 softtabstop=0 noexpandtab shiftwidth=8 nosmarttab
// Copyright 2025 Digital Signage Bunny Corp. Use of this source code is
// governed by an MIT-style license that can be found in the LICENSE file or at
// https://opensource.org/licenses/MIT.
window.HTMLImageElement.prototype.decode=window.HTMLImageElement.prototype.decode||function(){// If the image is already loaded, return a resolved promise.
if(this.complete){return Promise.resolve();}let timeout;const promise=new Promise((resolve,reject)=>{this.onload=event=>{if(typeof timeout==="undefined"){return;}clearTimeout(timeout);timeout=undefined;resolve(event);};this.onerror=event=>{if(typeof timeout==="undefined"){return;}clearTimeout(timeout);timeout=undefined;reject(event);};});// Reject the promise if the image fails to load or reasonable
// time has passed.
timeout=setTimeout(()=>{if(typeof timeout==="undefined"){return;}if(this.onerror){this.onerror("timeout");}},10000);return promise;};// vim: tabstop=8 softtabstop=0 noexpandtab shiftwidth=8 nosmarttab
// Copyright 2025 Digital Signage Bunny Corp. Use of this source code is
// governed by an MIT-style license that can be found in the LICENSE file or at
// https://opensource.org/licenses/MIT.
// TBD: Audio.
// TBD: Seeking, within CMS UI.
// TBD: Poster.
WebAsset=class WebAsset extends EventTarget$1{constructor(src,duration,collection){super();this.collection=collection;this.autoplay=true;this.loop=false;this._opacity=1;this._ended=false;this._error=null;this._networkState=HTMLMediaElement.NETWORK_NO_SOURCE;this._paused=true;this._readyState=HTMLMediaElement.HAVE_NOTHING;this._url=new URL(src,self.location.href);this._src=src;if(this._src.length!==0){this._networkState=HTMLMediaElement.NETWORK_EMPTY;}this._duration=duration;}// Per HTMLMediaElement.
get src(){return this._src;}get currentSrc(){return this._url.href;}get currentTime(){return 0;}set currentTime(_timestamp){}get duration(){return this._duration;}get ended(){return this._ended;}get error(){return this._error;}get networkState(){return this._networkState;}get paused(){return this._paused;}get readyState(){return this._readyState;}// Per HTMLVideoElement.
get className(){return'';}set className(_value){}get classList(){return new DOMTokenList();}get height(){return 0;}get width(){return 0;}get opacity(){return this._opacity;}set opacity(value){this._opacity=value;}get debugUrl(){return this._url;}};// super must be used to call functions only, operation is undefined when
// accessing variables that are not hidden behind getters and setters.
_WebImage_brand=/*#__PURE__*/new WeakSet();WebImage=class WebImage extends WebAsset{constructor(src,duration,collection){super(src,duration,collection);_classPrivateMethodInitSpec(this,_WebImage_brand);this._startTime=NaN;this._lastTimeUpdate=0;this._currentTime=0;}// Per HTMLMediaElement.
get src(){return this._src;}get currentSrc(){return this._url.href;}get currentTime(){return this._currentTime;}set currentTime(timestamp){this._currentTime=timestamp;this._startTime=NaN;}get duration(){return this._duration;}set duration(duration){this._duration=duration;}get ended(){return this._ended;}get error(){return this._error;}get networkState(){return this._networkState;}get paused(){return this._paused;}get readyState(){return this._readyState;}// Per HTMLVideoElement.
get className(){if(typeof this._image==="undefined"){return'';}return this._image.className;}set className(value){if(typeof this._image!=="undefined"){this._image.className=value;}}get classList(){if(typeof this._image==="undefined"){return new DOMTokenList();}return this._image.classList;}get height(){if(typeof this.texture==="undefined"){return NaN;}return this.texture.height;}get width(){if(typeof this.texture==="undefined"){return NaN;}return this.texture.width;}set opacity(value){if(typeof this._image!=="undefined"){const opacity=value===1?'':value.toString();if(this._image.style.opacity!==opacity){this._image.style.opacity=opacity;}}this._opacity=value;}visible(){if(typeof this._image!=="undefined"){this._image.style.visibility='';}}hide(){if(typeof this._image!=="undefined"){this._image.style.visibility='hidden';}}load(){console.log(`load image ... ${this.src}`);this.dispatchEvent(new Event('loadstart'));const image=this.texture=this._image=this.collection.acquire();image.crossOrigin='anonymous';image.src=this.src;this._networkState=HTMLMediaElement.NETWORK_LOADING;image.decode().then(()=>{this._networkState=HTMLMediaElement.NETWORK_IDLE;this.dispatchEvent(new Event('durationchange'));this._readyState=HTMLMediaElement.HAVE_METADATA;this.dispatchEvent(new Event('loadedmetadata'));this._readyState=HTMLMediaElement.HAVE_CURRENT_DATA;this.dispatchEvent(new Event('loadeddata'));this._readyState=HTMLMediaElement.HAVE_FUTURE_DATA;this.dispatchEvent(new Event('canplay'));this._readyState=HTMLMediaElement.HAVE_ENOUGH_DATA;this.dispatchEvent(new Event('canplaythrough'));}).catch(encodingError=>{console.error(`MEDIA: ${this.src}`,image,encodingError);this._networkState=HTMLMediaElement.NETWORK_EMPTY;this._readyState=HTMLMediaElement.HAVE_NOTHING;if(typeof image!=="undefined"){this.collection.release(image);this.texture=this._image=undefined;}this.dispatchEvent(new Event('error'));});}unload(){console.log(`unload image ... ${this.src}`);this.dispatchEvent(new Event('beforeunload'));this.pause();if(typeof this._image!=="undefined"){this.collection.release(this._image);this.texture=this._image=undefined;}this._readyState=HTMLMediaElement.HAVE_NOTHING;this._networkState=HTMLMediaElement.NETWORK_EMPTY;this._currentTime=0;this._startTime=NaN;this._lastTimeUpdate=0;this._ended=false;this.dispatchEvent(new Event('unload'));}pause(){if(this._paused)return;this._paused=true;this.dispatchEvent(new Event('pause'));}play(){var _this3=this;return _asyncToGenerator(function*(){_this3._paused=false;if(_this3._ended){_this3._ended=false;_this3._currentTime=0;}if(isNaN(_this3._startTime)){_this3._startTime=performance.now()-_this3._currentTime;}_this3.dispatchEvent(new Event('play'));_this3.dispatchEvent(new Event('playing'));})();}// FIXME: delta for paused.
paint(now,_remaining){if(this.paused||this.ended)return;const elapsed=(now-this._startTime)/1000;this._currentTime+=elapsed;if(this._currentTime>this.duration){_assertClassBrand(_WebImage_brand,this,_ended).call(this);}else{if(Math.floor(this._currentTime)>this._lastTimeUpdate){this._lastTimeUpdate=this._currentTime;this.dispatchEvent(new Event('timeupdate'));}}}};WebVideo=class WebVideo extends WebAsset{constructor(src,duration,collection){super(src,duration,collection);this._redispatchEvent=event=>{this.dispatchEvent(new Event(event instanceof Event?event.type:event));};}// Per HTMLMediaElement.
get src(){return this._src;}get currentSrc(){if(typeof this._video==="undefined"){return this._url.href;}return this._video.currentSrc;}get currentTime(){if(typeof this._video==="undefined"){return 0;}return this._video.currentTime;}set currentTime(timestamp){if(typeof this._video==="undefined"){return;}this._video.currentTime=timestamp;}get duration(){if(typeof this._video==="undefined"){return NaN;}return this._video.duration;}get ended(){if(typeof this._video==="undefined"){return false;}return this._video.ended;}get error(){if(typeof this._video==="undefined"){return false;}return this._video.error;}get networkState(){if(typeof this._video==="undefined"){return HTMLMediaElement.NETWORK_EMPTY;}return this._video.networkState;}get paused(){if(typeof this._video==="undefined"){return true;}return this._video.paused;}get readyState(){if(typeof this._video==="undefined"){return HTMLMediaElement.HAVE_NOTHING;}return this._video.readyState;}// Per HTMLVideoElement.
get className(){if(typeof this._video==="undefined"){return'';}return this._video.className;}set className(value){if(typeof this._video!=="undefined"){this._video.className=value;}}get classList(){if(typeof this._video==="undefined"){return new DOMTokenList();}return this._video.classList;}get height(){if(typeof this._video==="undefined"){return NaN;}return this._video.height;}get width(){if(typeof this._video==="undefined"){return NaN;}return this._video.width;}set opacity(value){if(typeof this._video!=="undefined"){const opacity=value===1?'':value.toString();if(this._video.style.opacity!==opacity){this._video.style.opacity=opacity;}}this._opacity=value;}visible(){if(typeof this._video!=="undefined"){this._video.style.visibility='';}}hide(){if(typeof this._video!=="undefined"){this._video.style.visibility='hidden';}}load(){console.log(`load video ... ${this.src}`);const video=this.texture=this._video=this.collection.acquire();video.onabort=this._redispatchEvent;video.oncanplay=this._redispatchEvent;video.oncanplaythrough=this._redispatchEvent;video.ondurationchange=this._redispatchEvent;video.onemptied=this._redispatchEvent;video.onended=this._redispatchEvent;video.onerror=this._redispatchEvent;video.onloadedmetadata=this._redispatchEvent;video.onloadstart=this._redispatchEvent;video.onpause=this._redispatchEvent;video.onplay=this._redispatchEvent;video.onplaying=this._redispatchEvent;video.onprogress=this._redispatchEvent;video.onstalled=this._redispatchEvent;video.onsuspend=this._redispatchEvent;video.ontimeupdate=this._redispatchEvent;video.onwaiting=this._redispatchEvent;video.src=this.src;// Avoid "WebGL: INVALID_VALUE: texImage2D: no video".
video.onloadeddata=event=>{this._redispatchEvent(event);};try{video.load();}catch(encodingError){this.collection.release(video);this.texture=this._video=undefined;throw encodingError;}}unload(){console.log(`unload video ... ${this.src}`);this.dispatchEvent(new Event('beforeunload'));this.pause();if(typeof this._video!=="undefined"){this.collection.release(this._video);this.texture=this._video=undefined;}this.dispatchEvent(new Event('unload'));}pause(){if(typeof this._video==="undefined"){return;}this._video.pause();}play(){var _this4=this;return _asyncToGenerator(function*(){if(typeof _this4._video==="undefined"){return;}yield _this4._video.play();})();}paint(_now,_remaining){}};WebCollection=class WebCollection{constructor(renderRoot){this.renderRoot=renderRoot;}};WebImageCollection=class WebImageCollection extends WebCollection{constructor(renderRoot){super(renderRoot);this._images=[];this._count=0;}// TSC forces pop() to return undefined even if length is checked.
acquire(){let img=this._images.pop();if(typeof img==="undefined"){img=new Image();this._count++;this.renderRoot.appendChild(img);}else{img.className='';}return img;}createCssAsset(src,duration){return new WebImage(src,duration,this);}release(img){img.removeAttribute('src');if(this._count>2){this.renderRoot.removeChild(img);this._count--;return;}img.className='spare';img.style.opacity='';img.style.visibility='';this._images.push(img);}// Clears the trash stack, not the elements acquired by the user.
clear(){for(const img of this._images){this.renderRoot.removeChild(img);}this._images=[];}};WebVideoCollection=class WebVideoCollection extends WebCollection{constructor(renderRoot){super(renderRoot);this._videos=[];this._count=0;}acquire(){let video=this._videos.pop();if(typeof video==="undefined"){video=document.createElement('video');this._count++;video.autoplay=false;video.crossOrigin='anonymous';video.muted=true;video.playsInline=true;video.preload='auto';// The video will be played soon.
// Video must be within DOM to playback.
this.renderRoot.appendChild(video);}else{video.className='';}return video;}createCssAsset(src,_duration){return new WebVideo(src,NaN,this);}release(video){if(!video.paused){video.pause();}// Some platforms treat `video.src = ''` as loading the current
// location, so we use `video.removeAttribute('src')` instead.
video.removeAttribute('src');if(this._count>2){this.renderRoot.removeChild(video);this._count--;return;}video.className='spare';video.style.opacity='';video.style.visibility='';this._videos.push(video);}clear(){for(const video of this._videos){this.renderRoot.removeChild(video);}this._videos=[];}};WebAssetManager=class WebAssetManager{constructor(){this._collection=new Map();}setAssetTarget(renderTarget){this._renderTarget=renderTarget;}setRenderer(_renderer){}_createCollection(renderTarget){// TypeScript assumes iterator of first type.
const collection=new Map([['HTMLImageElement',new WebImageCollection(renderTarget)],['HTMLVideoElement',new WebVideoCollection(renderTarget)]]);return collection;}// decl: { type, href }
// Returns: asset.
createCssAsset(decl){if(this._collection.size===0){if(typeof this._renderTarget==="undefined"){throw new Error("undefined render target.");}this._collection=this._createCollection(this._renderTarget);}const collection=this._collection.get(decl['@type']);if(typeof collection==="undefined"){throw new Error('Undefined collection.');}return collection.createCssAsset(decl.href,decl.duration);}clear(){for(const value of this._collection.values()){value.clear();}}};RendererAsset=class RendererAsset{constructor(id,media_asset){this.id=id;this.media_asset=media_asset;this.user_data={};}get paused(){return this.media_asset.paused;}get ended(){return this.media_asset.ended;}get error(){return this.media_asset.error;}get readyState(){return this.media_asset.readyState;}get networkState(){return this.media_asset.networkState;}get texture(){return this.media_asset.texture;}get currentSrc(){return this.media_asset.currentSrc;}get currentTime(){return this.media_asset.currentTime;}set currentTime(timestamp){this.media_asset.currentTime=timestamp;}get className(){return this.media_asset.className;}set className(value){this.media_asset.className=value;}get classList(){return this.media_asset.classList;}get opacity(){return this.media_asset.opacity;}set opacity(value){this.media_asset.opacity=value;}load(){if(this.readyState!==HTMLMediaElement.HAVE_NOTHING){return;}if(this.networkState!==HTMLMediaElement.NETWORK_EMPTY){return;}try{this.media_asset.load();}catch(error){console.error(`RENDERER: ${error}`);}}unload(){this.media_asset.unload();}visible(){this.media_asset.visible();}hide(){this.media_asset.hide();}play(){var _this5=this;return _asyncToGenerator(function*(){yield _this5.media_asset.play();})();}paint(now,remaining){this.media_asset.paint(now,remaining);}};WebRenderer=class WebRenderer extends EventTarget$1{constructor(prefetchFactory){super();this._renderTarget=null;this._mam=new WebAssetManager();this._transition_percent=0;this._transition_percent_speed=0;this._network_loading_count=0;this._map1_asset=null;this._map2_asset=null;this._next_asset=null;this._asset_cache=new Map();// Per HTMLMediaElement.
this._ended=false;this._error=null;this._networkState=HTMLMediaElement.NETWORK_EMPTY;this._paused=true;this._readyState=HTMLMediaElement.HAVE_NOTHING;this._debug=document.createElement('div');this._lastDebug="";// on requestAnimationFrame() callback.
this._previousTimestamp=0;this._asset_prefetch=new prefetchFactory();{this._debug.className='debug';document.body.appendChild(this._debug);}}get ended(){return this._ended;}get error(){return this._error;}get networkState(){return this._networkState;}get paused(){return this._paused;}get readyState(){return this._readyState;}// Called after placement in DOM.
init(){console.groupCollapsed("CSS-RENDERER: init");console.groupEnd();}close(){console.log("CSS-RENDERER: close");for(const asset of this._asset_cache.values()){asset.hide();asset.unload();}this._asset_cache.clear();}setSetStateHook(cb){this._set_state_hook=cb;}clearSetStateHook(){this._set_state_hook=undefined;}setSchedulerMessagePort(scheduler){var _this6=this;console.log("CSS-RENDERER: setSchedulerMessagePort",scheduler);expose({setState:value=>this.setState(value),setSources:function(){var _ref3=_asyncToGenerator(function*(scope,decls){return yield _this6.setSources(scope,decls.map(decl=>{return{'@type':decl['@type'],id:decl.id,href:decl.href,size:decl.size,hash:decl.hash,md5:decl.md5,integrity:decl.integrity};}));});return function setSources(_x,_x2){return _ref3.apply(this,arguments);};}()},scheduler);}// Called by Scheduler or via Cluster as a follower.  This API receives
// the near and immediate scheduling state to render the current and
// next media asset, including the transition between the two.
setState(value){var _this7=this;return _asyncToGenerator(function*(){// In a cluster we need to forward the state to all nodes
// before we can process.
if(typeof _this7._set_state_hook!=="undefined"){_this7._set_state_hook(value);return;}yield _this7.setStateUnhooked(value);})();}setStateUnhooked(value){var _this8=this;return _asyncToGenerator(function*(){{const html=prettyPrint(minimize(value));if(html!==_this8._lastDebug){_this8._debug.innerHTML=_this8._lastDebug=html;}}if(value.transition){yield _this8._onSchedulerMap1(value.transition.from);_this8._onSchedulerMap2(value.transition.to);_this8._onSchedulerNext(null);_this8._updateTransitionPercent(value.transition.percent,value.transition.percentSpeed);}else{yield _this8._onSchedulerMap1(value.mediaCurrent,{autoplay:true});_this8._onSchedulerMap2(null);_this8._onSchedulerNext(value.mediaNext);if(value.mediaCurrent!==null&&_this8._map1_asset!==null){_this8._map1_asset.user_data.end_time=_this8._endTime(value.mediaCurrent);}if(value.mediaNext!==null&&_this8._next_asset!==null){_this8._next_asset.user_data.end_time=_this8._endTime(value.mediaNext);}}_this8._interpolateTransition(_this8._previousTimestamp);})();}_endTime(asset){return typeof asset.remainingTimeMs==="number"?asset.remainingTimeMs+performance.now():Number.MAX_SAFE_INTEGER;}setAssetTarget(assetTarget){console.log("CSS-RENDERER: setAssetTarget",assetTarget);this._mam.setAssetTarget(assetTarget);}setRenderTarget(renderTarget){console.log("CSS-RENDERER: setRenderTarget",renderTarget);this._renderTarget=renderTarget;}setPixelRatio(value){console.log("CSS-RENDERER: setPixelRatio",value);// TBD: translate to CSS.
}setSize(width,height){console.log("CSS-RENDERER: setSize",width,height);if(this._renderTarget!==null){this._renderTarget.style.width=`${width}px`;this._renderTarget.style.height=`${height}px`;}}setViews(views){console.log("CSS-RENDERER: setViews",views);}setSources(scope,sources){var _this9=this;return _asyncToGenerator(function*(){console.log("CSS-RENDERER: setSources",scope,sources);yield _this9._asset_prefetch.acquireSources(scope,sources);})();}render(timestamp){//		console.log('update', timestamp);
const elapsed=timestamp-this._previousTimestamp;this._previousTimestamp=timestamp;let has_map1_painted=false;if(this._map1_asset!==null){if(this._canPaintAsset(this._map1_asset)){const remaining=this._map1_asset.user_data.end_time-timestamp;try{this._paintAsset(this._map1_asset,timestamp,remaining);has_map1_painted=true;}catch(ex){console.error(ex);console.error(this._map1_asset);}}else if(this._hasWaitingDuration()){const remaining=this._map1_asset.user_data.end_time-timestamp;this._paintWaitingDuration(timestamp,remaining);has_map1_painted=true;}}if(!has_map1_painted){this._paintWaiting(timestamp);}if(this._map2_asset!==null){if(this._canPaintAsset(this._map2_asset)){const remaining=this._map2_asset.user_data.end_time-timestamp;try{this._paintAsset(this._map2_asset,timestamp,remaining);}catch(ex){console.error(ex);console.error(this._map2_asset);}}}this._interpolateTransition(elapsed);}_canPaintAsset(asset){return asset.readyState>=HTMLMediaElement.HAVE_CURRENT_DATA;}_paintAsset(asset,timestamp,remaining){asset.paint(timestamp,remaining);}// on requestIdleCallback() callback.
idle(){}_interpolateTransition(elapsed){if(this._transition_percent_speed===0){if(this._map1_asset!==null){this._map1_asset.opacity=1;}if(this._map2_asset!==null){this._map2_asset.opacity=0;}return;}this._transition_percent+=this._transition_percent_speed*elapsed/1000;if(this._transition_percent>1){this._transition_percent=1;this._transition_percent_speed=0;}if(this._map1_asset!==null){this._map1_asset.opacity=Math.round((1-this._transition_percent+Number.EPSILON)*100)/100;}if(this._map2_asset!==null){this._map2_asset.opacity=1;}}_fetchImage(url){return _asyncToGenerator(function*(){console.log("CSS-RENDERER: _fetchImage",url);const img=yield new Promise((resolve,reject)=>{const img=new Image();img.src=url;img.decode().then(()=>{resolve(img);}).catch(encodingError=>{reject(encodingError);});});console.info("CSS-RENDERER: loaded displacement map",img.src);return img;})();}//	protected _onSchedulerError(err: Error): void {
//		console.error(err);
//	}
_onSchedulerMap1(_x3){var _this0=this;return _asyncToGenerator(function*(asset_decl,{autoplay=false}={}){if(asset_decl!==null){if(!_this0._isAssetReady(asset_decl.decl)){return;}if(_this0._map1_asset!==null){if(_this0._map1_asset.id===asset_decl.decl.id){_this0._updateAsset(_this0._map1_asset);if(autoplay&&_this0._map1_asset.user_data.has_loaded&&!_this0._map1_asset.user_data.is_playing&&_this0._map1_asset.readyState>=HTMLMediaElement.HAVE_CURRENT_DATA){_this0._map1_asset.user_data.is_playing=true;yield _this0._map1_asset.play();}return;}_this0._unbindAsset(_this0._map1_asset);}_this0._map1_asset=_this0._fetchAsset(asset_decl.decl);_this0._map1_asset.className="map1";}else if(_this0._map1_asset!==null){_this0._unbindAsset(_this0._map1_asset);_this0._map1_asset=null;console.log(`CSS-RENDERER: map1 null`);}}).apply(this,arguments);}// Fetch asset, create asset if needed.
_fetchAsset(decl){const asset=this._asset_cache.get(decl.id);if(typeof asset!=="undefined"){asset.user_data.ref_count++;if(!asset.user_data.has_loaded&&!asset.user_data.is_loading){asset.user_data.is_loading=true;this._networkLoadingRef();asset.load();}return asset;}const new_asset=this._createRendererAsset(decl);this._networkLoadingRef();new_asset.user_data.is_loading=true;new_asset.load();return new_asset;}// Update asset state, loading resources as needed.
_updateAsset(asset){// Test for loaded asset.
if(!asset.user_data.has_loaded&&asset.user_data.is_loading&&asset.readyState===HTMLMediaElement.HAVE_ENOUGH_DATA){asset.user_data.is_loading=false;asset.user_data.has_loaded=true;this._networkLoadingUnref();}}// Unbind asset from the renderer, release resources.
_unbindAsset(asset){asset.user_data.ref_count--;if(asset.user_data.ref_count!==0){return;}if(typeof asset.texture!=="undefined"){asset.unload();}asset.user_data={ref_count:0,is_loading:false,has_loaded:false,is_playing:false,end_time:NaN};}_onSchedulerMap2(asset_decl){if(asset_decl!==null){if(!this._isAssetReady(asset_decl.decl)){return;}if(this._map2_asset!==null){if(this._map2_asset.id===asset_decl.decl.id){this._updateAsset(this._map2_asset);return;}this._unbindAsset(this._map2_asset);}this._map2_asset=this._fetchAsset(asset_decl.decl);this._map2_asset.className="map2";}else if(this._map2_asset!==null){this._unbindAsset(this._map2_asset);this._map2_asset=null;}}_onSchedulerNext(asset_decl){if(asset_decl!==null){if(!this._isAssetReady(asset_decl.decl)){return;}if(this._next_asset!==null){if(this._next_asset.id===asset_decl.decl.id){this._updateAsset(this._next_asset);return;}this._unbindAsset(this._next_asset);}this._next_asset=this._fetchAsset(asset_decl.decl);this._next_asset.className="next";}else if(this._next_asset!==null){this._unbindAsset(this._next_asset);this._next_asset=null;}}_updateTransitionPercent(percent,percentSpeed){this._transition_percent=percent;this._transition_percent_speed=percentSpeed;}_networkLoadingRef(){if(this._network_loading_count===0){this._networkState=HTMLMediaElement.NETWORK_LOADING;}this._network_loading_count++;}_networkLoadingUnref(){this._network_loading_count--;if(this._network_loading_count===0){this._networkState=HTMLMediaElement.NETWORK_IDLE;}}_isAssetReady(decl){const href=this._asset_prefetch.getPath(decl.href);return typeof href==="string"&&href.length!==0;}_resolveAsset(decl){return _objectSpread({'@type':decl['@type'],id:decl.id,href:this._asset_prefetch.getPath(decl.href),duration:decl.duration},Array.isArray(decl.sources)&&{sources:decl.sources.map(source=>this._asset_prefetch.getPath(source.href))});}_hasWaitingDuration(){return false;}_paintWaiting(_timestamp){}_paintWaitingDuration(_timestamp,_remaining){}_createRendererAsset(decl){const media_asset=this._mam.createCssAsset(this._resolveAsset(decl));if(typeof media_asset==="undefined"){throw new Error("Failed to create media asset.");}const asset=new RendererAsset(decl.id,media_asset);asset.user_data={ref_count:1,is_loading:false,has_loaded:false,is_playing:false,end_time:NaN};this._asset_cache.set(asset.id,asset);return asset;}};// vim: tabstop=8 softtabstop=0 noexpandtab shiftwidth=8 nosmarttab
LunaVideoCollection=class LunaVideoCollection extends WebVideoCollection{acquire(){const video=super.acquire();video.texture=true;return video;}};LunaAssetManager=class LunaAssetManager extends WebAssetManager{_createCollection(renderTarget){// TypeScript assumes iterator of first type.
const collection=new Map([['HTMLImageElement',new WebImageCollection(renderTarget)],['HTMLVideoElement',new LunaVideoCollection(renderTarget)]]);return collection;}};LG_STORAGE_PATH="file://internal";LG_POOL_PATH=`p`;LG_HTTP_PATH="http://127.0.0.1:9080";EvictionEntry=class EvictionEntry{constructor(id,date){this.id=id;this.date=date;}};LunaPool=class LunaPool{constructor(base_path,http_path){this._url_to_id_map=new Map();this._id_to_asset_map=new Map();this._id_to_file_map=new Map();// LRU queue of all assets in the pool, oldest to newest.
this._eviction_queue=[];// Asset scopes that are protected from eviction.
this._protected_scopes=new Map();this._protected_ids=new Set();this._has_loaded_from_disk=false;// Configured maximum size of the pool.
this._max_size=0;// Current size of the pool.
this._size=0;this._base_path=base_path;this._http_path=http_path;}// Maximum pool size in not stored within the pool and must be set on
// each instance.
reserveStorage(size){var _this1=this;return _asyncToGenerator(function*(){_this1._max_size=size;yield _this1.reserve(0);})();}has(id){const asset=this._id_to_asset_map.get(id);return asset&&asset.href.length!==0;}// Mark existing or upcoming assets to be protected from eviction, the
// latter causes immediate eviction of unprotected assets.
protectAssets(scope,assets){var _this10=this;return _asyncToGenerator(function*(){const now=new Date();const ids=new Set();let total_size=0;for(const asset of assets){// The asset behind any id is idempotent.
if(_this10.has(asset.id)){console.info(`asset #${asset.id} already in pool`);const index=_this10._eviction_queue.findIndex(x=>x.id===asset.id);if(index!==-1){console.info(`removing asset #${asset.id} from eviction queue ...`);_this10._eviction_queue.splice(index,1);}continue;}console.info(`asset #${asset.id} adding to pool ...`);if(typeof asset.size==="number"){total_size+=asset.size;}const filename=filenameFromIdAndHref(asset.id,asset.href);const filepath=`${_this10._base_path}/${filename}`;_this10._url_to_id_map.set(asset.href,asset.id);_this10._id_to_asset_map.set(asset.id,asset);_this10._id_to_file_map.set(asset.id,filepath);console.info(`added.`);_this10._eviction_queue.push(new EvictionEntry(asset.id,now));_this10._protected_ids.add(asset.id);ids.add(asset.id);}_this10._protected_scopes.set(scope,ids);if(total_size>0){yield _this10.reserve(total_size);_this10._size+=total_size;}})();}// Remove protection from assets, so that they may be evicted to leave
// space for new assets.
// Does not cause immediate eviction.
unprotectAssets(scope){const ids=this._protected_scopes.get(scope);if(Array.isArray(ids)){for(const id of ids){this._protected_ids.delete(id);}}this._protected_scopes.delete(scope);}// Return native path to asset from external URI.
getFilePath(url){const id=this._url_to_id_map.get(url);if(typeof id==="undefined"){return"";}const filename=filenameFromIdAndHref(id,url);const filepath=`${this._base_path}/${filename}`;return filepath;}// Return a path usable in the DOM.
getHttpPath(url){const id=this._url_to_id_map.get(url);if(typeof id==="undefined"){return"";}const filename=filenameFromIdAndHref(id,url);const httppath=`${this._http_path}/${filename}`;return httppath;}// Reserve space for new assets, performing evictions on unprotected
// assets as necessary.
reserve(size){var _this11=this;return _asyncToGenerator(function*(){if(!_this11._has_loaded_from_disk){yield _this11._bootstrap();}let index=0;const max_size=_this11._max_size-size;while(_this11._size>max_size){if(index>=_this11._eviction_queue.length){return;}const entry=_this11._eviction_queue[index];if(_this11._protected_ids.has(entry.id)){index++;continue;}const asset=_this11._id_to_asset_map.get(entry.id);if(typeof asset!=="undefined"){const filename=filenameFromIdAndHref(entry.id,asset.href);const filepath=`${_this11._base_path}/${filename}`;const removeOptions={file:filepath,recursive:false};yield removeFile(removeOptions);_this11._url_to_id_map.delete(asset.href);}_this11._id_to_asset_map.delete(entry.id);_this11._id_to_file_map.delete(entry.id);_this11._eviction_queue.splice(index,1);index++;}})();}_sortedIndex(array,value){let low=0;let high=array.length;while(low<high){const mid=low+high>>>1;if(array[mid]<value){low=mid+1;}else{high=mid;}}return low;}// Read pool state from disk.
_bootstrap(){var _this12=this;return _asyncToGenerator(function*(){const listOptions={path:_this12._base_path};const data=yield listFiles(listOptions);for(const file of data.files){const id=file.name.substr(0,file.name.lastIndexOf('.'));const placeholder={'@type':'unknown',id,href:''};_this12._id_to_asset_map.set(id,placeholder);const file_url=`${_this12._base_path}/${file.name}`;_this12._id_to_file_map.set(id,file_url);_this12._size+=file.size;const statOptions={path:file_url};const statData=yield statFile(statOptions);const file_date=new Date(statData.atime);const index=_this12._sortedIndex(_this12._eviction_queue,file_date.getTime());_this12._eviction_queue.splice(index,0,new EvictionEntry(id,file_date));}_this12._has_loaded_from_disk=true;})();}};LunaPrefetch=class LunaPrefetch extends EventTarget$1{constructor(){super();this._is_configured=false;this._pool=new LunaPool(`${LG_STORAGE_PATH}/${LG_POOL_PATH}`,`${LG_HTTP_PATH}/${LG_POOL_PATH}`);}// Use space as available reserving 128MB free.
_configurePool(){var _this13=this;return _asyncToGenerator(function*(){try{const options={path:`${LG_STORAGE_PATH}/${LG_POOL_PATH}`};yield mkdir(options);console.log(`PREFETCH: Created LG asset pool (${LG_STORAGE_PATH}/${LG_POOL_PATH})`);}catch(e){// Error: EEXIST: file already exists, mkdir '/storage/sd//p'
// {"errno":-17,"syscall":"mkdir","code":"EEXIST","path":"/storage/sd//p"}
if(e.code!=='EEXIST'){console.warn(e);console.warn(JSON.stringify(e));throw e;}console.log(`PREFETCH: Using LG asset pool (${LG_STORAGE_PATH}/${LG_POOL_PATH})`);}yield _this13._pool.reserveStorage(128*1024*1024);_this13._is_configured=true;})();}_fetchAssets(pool,assets){return _asyncToGenerator(function*(){//		console.log(`PREFETCH: __fetchAssets: ${JSON.stringify(assets.map(asset => asset.name))}`);
console.log(`PREFETCH: _fetchAssets: ${JSON.stringify(assets)}`);let change_count=0;for(const asset of assets){const filepath=pool.getFilePath(asset.href);console.info(`${asset.href} -> ${filepath}`);if(!filepath){console.warn(`asset #${asset.id} not in pool`);continue;}if(asset.size){try{const statOptions={path:filepath};const fileInfo=yield statFile(statOptions);console.info(`info: ${JSON.stringify(fileInfo)}`);if(fileInfo.size===asset.size){continue;}console.info(`size mismatch, removing file ...`);const removeOptions={file:filepath,recursive:false};yield removeFile(removeOptions);change_count++;console.info(`removed.`);}catch(err){console.warn(err);}}else if(asset.md5){console.info(`calculating md5 ...`);const md5Options={filePath:filepath};let md5Result=undefined;try{md5Result=yield getMD5Hash(md5Options);const md5hash=hexToBase64(md5Result.md5hash);console.info(`md5: ${md5hash}`);if(md5hash===asset.md5){continue;}}catch(err){// { errorText: "No such file", errorCode: "INTERNAL_ERROR" }
if(typeof err==='object'&&err!==null&&'errorText'in err&&err['errorText']==='No such file'){console.warn(`file not found: ${filepath}`);continue;}console.warn(err);}console.info(`checksum mismatch, removing file ...`);const removeOptions={file:filepath,recursive:false};yield removeFile(removeOptions);change_count++;console.info(`removed`);}else{console.warn("no size or md5, assuming valid asset.");continue;}try{console.info(`downloading ...`);const downloadOptions={action:'start',source:asset.href,destination:filepath,httpOption:{maxRedirection:5,timeout:300*1000,// milliseconds, match Chrome.
insecure:false}};// SCAP v1.6.4
// webOS Signage 3.2(3.0+) and later
// REF: https://webossignage.developer.lge.com/api/scap-api/scap18/storage/
yield downloadFile(downloadOptions);change_count++;console.info(`downloaded.`);}catch(e){console.log(`PREFETCH: Fetcher failed: ${e.message}`);throw e;}console.info(`calculating md5 ...`);const md5Options={filePath:filepath};const md5Result=yield getMD5Hash(md5Options);const md5hash=hexToBase64(md5Result.md5hash);console.info(`md5: ${md5hash}`);if(md5hash!==asset.md5){console.info(`checksum mismatch, removing file ...`);const removeOptions={file:filepath,recursive:false};yield removeFile(removeOptions);change_count++;console.info(`removed`);}}if(change_count>0){console.info(`fsync ...`);// Only fsync schedule.
yield fsync();}console.log(`PREFETCH: Fetcher complete ${JSON.stringify(assets)}.`);})();}// Protect API to limit space reclamation without time priority.
acquireSources(scope,sources){var _this14=this;return _asyncToGenerator(function*(){console.log(`PREFETCH: acquireSources ${scope} ${JSON.stringify(sources)}`);if(!_this14._is_configured){yield _this14._configurePool();}console.log(`PREFETCH: Protecting assets ...`);yield _this14._pool.protectAssets(scope,sources);console.log(`PREFETCH: Protected assets.`);yield _this14._fetchAssets(_this14._pool,sources);console.log(`PREFETCH: Fetched assets.`);})();}releaseSources(scope){var _this15=this;return _asyncToGenerator(function*(){_this15._pool.unprotectAssets(scope);})();}getPath(origin){return this._pool.getHttpPath(origin);}};// vim: tabstop=8 softtabstop=0 noexpandtab shiftwidth=8 nosmarttab
// Copyright 2025 Digital Signage Bunny Corp. Use of this source code is
// governed by an MIT-style license that can be found in the LICENSE file or at
// https://opensource.org/licenses/MIT.
LunaRenderer=class LunaRenderer extends WebRenderer{constructor(){super(LunaPrefetch);this._mam=new LunaAssetManager();}};// vim: tabstop=8 softtabstop=0 noexpandtab shiftwidth=8 nosmarttab
// Copyright 2025 Digital Signage Bunny Corp. Use of this source code is
// governed by an MIT-style license that can be found in the LICENSE file or at
// https://opensource.org/licenses/MIT.
NullRenderer=class NullRenderer extends EventTarget$1{constructor(){super();}get ended(){return false;}get error(){return null;}get networkState(){return HTMLMediaElement.NETWORK_EMPTY;}get paused(){return true;}get readyState(){return HTMLMediaElement.HAVE_NOTHING;}// Called after placement in DOM.
init(){console.log("NULL-RENDERER: init");}close(){console.log("NULL-RENDERER: close");}setSetStateHook(_cb){}clearSetStateHook(){}setSchedulerMessagePort(scheduler){console.log("NULL-RENDERER: setSchedulerMessagePort",scheduler);}// Called by Scheduler or via Cluster as a follower.  This API receives
// the near and immediate scheduling state to render the current and
// next media asset, including the transition between the two.
setState(_value){return _asyncToGenerator(function*(){})();}setStateUnhooked(_value){return _asyncToGenerator(function*(){})();}setAssetTarget(assetTarget){console.log("NULL-RENDERER: setAssetTarget",assetTarget);}setRenderTarget(renderTarget){console.log("NULL-RENDERER: setRenderTarget",renderTarget);}setPixelRatio(value){console.log("NULL-RENDERER: setPixelRatio",value);}setSize(width,height){console.log("NULL-RENDERER: setSize",width,height);}setViews(views){console.log("NULL-RENDERER: setViews",views);}setSources(_scope,_sources){return _asyncToGenerator(function*(){})();}// no-op
// on requestAnimationFrame() callback.
render(_timestamp){}// on requestIdleCallback() callback.
idle(){}};// vim: tabstop=8 softtabstop=0 noexpandtab shiftwidth=8 nosmarttab
_RTCMesh_brand=/*#__PURE__*/new WeakSet();RTCMesh=class RTCMesh extends EventTarget{constructor(settings){var _this16;super();_this16=this;_classPrivateMethodInitSpec(this,_RTCMesh_brand);_defineProperty(this,"label",void 0);_defineProperty(this,"id",void 0);_defineProperty(this,"configuration",void 0);_defineProperty(this,"peers",void 0);_defineProperty(this,"enable_loopback",void 0);_defineProperty(this,"channels",void 0);_defineProperty(this,"user_channels",void 0);_defineProperty(this,"connections",void 0);_defineProperty(this,"loopback1",void 0);_defineProperty(this,"loopback2",void 0);_defineProperty(this,"loopback_send_channel",void 0);_defineProperty(this,"loopback_receive_channel",void 0);this.label=settings.label;this.id=settings.id;this.configuration={bundlePolicy:"max-compat",iceServers:settings.iceServers};this.peers=settings.peers;this.enable_loopback=settings.enableLoopback;this.channels=new Map();this.user_channels=new Map();this.connections=new Map();for(const peer of this.peers){if(peer===this.id){continue;}_assertClassBrand(_RTCMesh_brand,this,_createRTCPeerConnection).call(this,peer);}if(this.enable_loopback){_asyncToGenerator(function*(){yield _assertClassBrand(_RTCMesh_brand,_this16,_createLoopback).call(_this16);})();}}user_channel(peer){return this.user_channels.get(peer);}readyState(peer){const channel=this.channels.get(peer);if(typeof channel==="undefined"){return"new";}return channel.readyState;}close(id){var _this17=this;return _asyncToGenerator(function*(){console.log(`close(${id})`);yield _assertClassBrand(_RTCMesh_brand,_this17,_destroy).call(_this17,id);// REF: https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/close
// Make sure that you delete all references to the previous
// RTCPeerConnection before attempting to create a new one that
// connects to the same remote peer.
queueMicrotask(()=>_assertClassBrand(_RTCMesh_brand,_this17,_createRTCPeerConnection).call(_this17,id));})();}addIceCandidate(id,candidate){console.log(`addIceCandidate(${id}, ${candidate})`);const connection=this.connections.get(id);if(typeof connection==="undefined"){return;}if(candidate===null){return;}connection.addIceCandidate(new RTCIceCandidate(candidate));}// Origin side:
createOffer(id){var _this18=this;console.log(`createOffer(${id})`);_asyncToGenerator(function*(){const connection=_this18.connections.get(id);if(typeof connection==="undefined"){console.error("no connection");return;}connection.onconnectionstatechange=event=>{console.log(event);_assertClassBrand(_RTCMesh_brand,_this18,_webrtc_onconnectionstatechange).call(_this18,connection,id);};connection.onicecandidate=event=>{console.log(event);_assertClassBrand(_RTCMesh_brand,_this18,_webrtc_onicecandidate).call(_this18,connection,id,event.candidate);};try{_assertClassBrand(_RTCMesh_brand,_this18,_createRTCDataChannels).call(_this18,id,connection);}catch(e){console.warn(e);try{yield _this18.close(id);console.log("RTC connection closed.");}catch(e){console.warn(e);}finally{const event=new CustomEvent('failed',{detail:{id}});_this18.dispatchEvent(event);}return;}const offer=yield connection.createOffer({iceRestart:false,offerToReceiveAudio:false,offerToReceiveVideo:false});// Triggering ICE candidate generation.
yield connection.setLocalDescription(offer);const event=new CustomEvent('offer',{detail:{id,sdp:offer.sdp}});_this18.dispatchEvent(event);})();}addAnswer(id,sdp){console.log(`addAnswer(${id}, ${sdp})`);const connection=this.connections.get(id);if(typeof connection==="undefined"){return;}const desc=new RTCSessionDescription({type:"answer",sdp});connection.setRemoteDescription(desc);}broadcast(data){for(const channel of this.channels.values()){if(channel.readyState!=="open"){continue;}try{//				console.log("send ->", channel.label, data);
channel.send(data);}catch(e){console.warn(e);}}if(this.loopback_send_channel instanceof RTCDataChannel&&this.loopback_send_channel.readyState==="open"){try{this.loopback_send_channel.send(data);}catch(e){console.warn(e);}}}// Receiver side:
createAnswer(id,sdp){var _this19=this;console.log(`createAnswer(${id}, ${sdp})`);_asyncToGenerator(function*(){const connection=_this19.connections.get(id);if(typeof connection==="undefined"){return;}connection.onconnectionstatechange=event=>{console.log(event);_assertClassBrand(_RTCMesh_brand,_this19,_webrtc_onconnectionstatechange).call(_this19,connection,id);};connection.onicecandidate=event=>{console.log(event);_assertClassBrand(_RTCMesh_brand,_this19,_webrtc_onicecandidate).call(_this19,connection,id,event.candidate);};try{_assertClassBrand(_RTCMesh_brand,_this19,_createRTCDataChannels).call(_this19,id,connection);}catch(e){console.warn(e);_this19.close(id).then(()=>{console.log("RTC connection closed.");}).catch(e=>{console.warn(e);}).finally(()=>{const event=new CustomEvent('failed',{detail:{id}});_this19.dispatchEvent(event);});return;}const desc=new RTCSessionDescription({type:"offer",sdp});yield connection.setRemoteDescription(desc);const answer=yield connection.createAnswer();yield connection.setLocalDescription(answer);const event=new CustomEvent('answer',{detail:{id,sdp:answer.sdp}});_this19.dispatchEvent(event);})();}};sharedTextEncoder=new TextEncoder();// This threshold should be determined by benchmarking, which might vary in engines and input data.
// Run `npx ts-node benchmark/encode-string.js` for details.
TEXT_ENCODER_THRESHOLD=50;CHUNK_SIZE=0x1000;sharedTextDecoder=new TextDecoder();// This threshold should be determined by benchmarking, which might vary in engines and input data.
// Run `npx ts-node benchmark/decode-string.js` for details.
TEXT_DECODER_THRESHOLD=200;ExtData=class ExtData{constructor(type,data){this.type=type;this.data=data;}};DecodeError=class DecodeError extends Error{constructor(message){super(message);// fix the prototype chain in a cross-platform way
const proto=Object.create(DecodeError.prototype);Object.setPrototypeOf(this,proto);Object.defineProperty(this,"name",{configurable:true,enumerable:false,value:DecodeError.name});}};// Integer Utility
UINT32_MAX=0xffffffff;EXT_TIMESTAMP=-1;TIMESTAMP32_MAX_SEC=0x100000000-1;// 32-bit unsigned int
TIMESTAMP64_MAX_SEC=0x400000000-1;timestampExtension={type:EXT_TIMESTAMP,encode:encodeTimestampExtension,decode:decodeTimestampExtension};// ExtensionCodec to handle MessagePack extensions
ExtensionCodec=class ExtensionCodec{constructor(){// built-in extensions
this.builtInEncoders=[];this.builtInDecoders=[];// custom extensions
this.encoders=[];this.decoders=[];this.register(timestampExtension);}register({type,encode,decode}){if(type>=0){// custom extensions
this.encoders[type]=encode;this.decoders[type]=decode;}else{// built-in extensions
const index=-1-type;this.builtInEncoders[index]=encode;this.builtInDecoders[index]=decode;}}tryToEncode(object,context){// built-in extensions
for(let i=0;i<this.builtInEncoders.length;i++){const encodeExt=this.builtInEncoders[i];if(encodeExt!=null){const data=encodeExt(object,context);if(data!=null){const type=-1-i;return new ExtData(type,data);}}}// custom extensions
for(let i=0;i<this.encoders.length;i++){const encodeExt=this.encoders[i];if(encodeExt!=null){const data=encodeExt(object,context);if(data!=null){const type=i;return new ExtData(type,data);}}}if(object instanceof ExtData){// to keep ExtData as is
return object;}return null;}decode(data,type,context){const decodeExt=type<0?this.builtInDecoders[-1-type]:this.decoders[type];if(decodeExt){return decodeExt(data,type,context);}else{// decode() does not fail, returns ExtData instead.
return new ExtData(type,data);}}};_ExtensionCodec=ExtensionCodec;_ExtensionCodec.defaultCodec=new _ExtensionCodec();DEFAULT_MAX_DEPTH=100;DEFAULT_INITIAL_BUFFER_SIZE=2048;Encoder=class Encoder{constructor(options){var _options$extensionCod,_options$useBigInt,_options$maxDepth,_options$initialBuffe,_options$sortKeys,_options$forceFloat,_options$ignoreUndefi,_options$forceInteger;this.entered=false;this.extensionCodec=(_options$extensionCod=options===null||options===void 0?void 0:options.extensionCodec)!==null&&_options$extensionCod!==void 0?_options$extensionCod:ExtensionCodec.defaultCodec;this.context=options===null||options===void 0?void 0:options.context;// needs a type assertion because EncoderOptions has no context property when ContextType is undefined
this.useBigInt64=(_options$useBigInt=options===null||options===void 0?void 0:options.useBigInt64)!==null&&_options$useBigInt!==void 0?_options$useBigInt:false;this.maxDepth=(_options$maxDepth=options===null||options===void 0?void 0:options.maxDepth)!==null&&_options$maxDepth!==void 0?_options$maxDepth:DEFAULT_MAX_DEPTH;this.initialBufferSize=(_options$initialBuffe=options===null||options===void 0?void 0:options.initialBufferSize)!==null&&_options$initialBuffe!==void 0?_options$initialBuffe:DEFAULT_INITIAL_BUFFER_SIZE;this.sortKeys=(_options$sortKeys=options===null||options===void 0?void 0:options.sortKeys)!==null&&_options$sortKeys!==void 0?_options$sortKeys:false;this.forceFloat32=(_options$forceFloat=options===null||options===void 0?void 0:options.forceFloat32)!==null&&_options$forceFloat!==void 0?_options$forceFloat:false;this.ignoreUndefined=(_options$ignoreUndefi=options===null||options===void 0?void 0:options.ignoreUndefined)!==null&&_options$ignoreUndefi!==void 0?_options$ignoreUndefi:false;this.forceIntegerToFloat=(_options$forceInteger=options===null||options===void 0?void 0:options.forceIntegerToFloat)!==null&&_options$forceInteger!==void 0?_options$forceInteger:false;this.pos=0;this.view=new DataView(new ArrayBuffer(this.initialBufferSize));this.bytes=new Uint8Array(this.view.buffer);}clone(){// Because of slightly special argument `context`,
// type assertion is needed.
// eslint-disable-next-line @typescript-eslint/no-unsafe-argument
return new Encoder({extensionCodec:this.extensionCodec,context:this.context,useBigInt64:this.useBigInt64,maxDepth:this.maxDepth,initialBufferSize:this.initialBufferSize,sortKeys:this.sortKeys,forceFloat32:this.forceFloat32,ignoreUndefined:this.ignoreUndefined,forceIntegerToFloat:this.forceIntegerToFloat});}reinitializeState(){this.pos=0;}/**
     * This is almost equivalent to {@link Encoder#encode}, but it returns an reference of the encoder's internal buffer and thus much faster than {@link Encoder#encode}.
     *
     * @returns Encodes the object and returns a shared reference the encoder's internal buffer.
     */encodeSharedRef(object){if(this.entered){const instance=this.clone();return instance.encodeSharedRef(object);}try{this.entered=true;this.reinitializeState();this.doEncode(object,1);return this.bytes.subarray(0,this.pos);}finally{this.entered=false;}}/**
     * @returns Encodes the object and returns a copy of the encoder's internal buffer.
     */encode(object){if(this.entered){const instance=this.clone();return instance.encode(object);}try{this.entered=true;this.reinitializeState();this.doEncode(object,1);return this.bytes.slice(0,this.pos);}finally{this.entered=false;}}doEncode(object,depth){if(depth>this.maxDepth){throw new Error(`Too deep objects in depth ${depth}`);}if(object==null){this.encodeNil();}else if(typeof object==="boolean"){this.encodeBoolean(object);}else if(typeof object==="number"){if(!this.forceIntegerToFloat){this.encodeNumber(object);}else{this.encodeNumberAsFloat(object);}}else if(typeof object==="string"){this.encodeString(object);}else if(this.useBigInt64&&typeof object==="bigint"){this.encodeBigInt64(object);}else{this.encodeObject(object,depth);}}ensureBufferSizeToWrite(sizeToWrite){const requiredSize=this.pos+sizeToWrite;if(this.view.byteLength<requiredSize){this.resizeBuffer(requiredSize*2);}}resizeBuffer(newSize){const newBuffer=new ArrayBuffer(newSize);const newBytes=new Uint8Array(newBuffer);const newView=new DataView(newBuffer);newBytes.set(this.bytes);this.view=newView;this.bytes=newBytes;}encodeNil(){this.writeU8(0xc0);}encodeBoolean(object){if(object===false){this.writeU8(0xc2);}else{this.writeU8(0xc3);}}encodeNumber(object){if(!this.forceIntegerToFloat&&Number.isSafeInteger(object)){if(object>=0){if(object<0x80){// positive fixint
this.writeU8(object);}else if(object<0x100){// uint 8
this.writeU8(0xcc);this.writeU8(object);}else if(object<0x10000){// uint 16
this.writeU8(0xcd);this.writeU16(object);}else if(object<0x100000000){// uint 32
this.writeU8(0xce);this.writeU32(object);}else if(!this.useBigInt64){// uint 64
this.writeU8(0xcf);this.writeU64(object);}else{this.encodeNumberAsFloat(object);}}else{if(object>=-32){// negative fixint
this.writeU8(0xe0|object+0x20);}else if(object>=-128){// int 8
this.writeU8(0xd0);this.writeI8(object);}else if(object>=-32768){// int 16
this.writeU8(0xd1);this.writeI16(object);}else if(object>=-2147483648){// int 32
this.writeU8(0xd2);this.writeI32(object);}else if(!this.useBigInt64){// int 64
this.writeU8(0xd3);this.writeI64(object);}else{this.encodeNumberAsFloat(object);}}}else{this.encodeNumberAsFloat(object);}}encodeNumberAsFloat(object){if(this.forceFloat32){// float 32
this.writeU8(0xca);this.writeF32(object);}else{// float 64
this.writeU8(0xcb);this.writeF64(object);}}encodeBigInt64(object){if(object>=BigInt(0)){// uint 64
this.writeU8(0xcf);this.writeBigUint64(object);}else{// int 64
this.writeU8(0xd3);this.writeBigInt64(object);}}writeStringHeader(byteLength){if(byteLength<32){// fixstr
this.writeU8(0xa0+byteLength);}else if(byteLength<0x100){// str 8
this.writeU8(0xd9);this.writeU8(byteLength);}else if(byteLength<0x10000){// str 16
this.writeU8(0xda);this.writeU16(byteLength);}else if(byteLength<0x100000000){// str 32
this.writeU8(0xdb);this.writeU32(byteLength);}else{throw new Error(`Too long string: ${byteLength} bytes in UTF-8`);}}encodeString(object){const maxHeaderSize=1+4;const byteLength=utf8Count(object);this.ensureBufferSizeToWrite(maxHeaderSize+byteLength);this.writeStringHeader(byteLength);utf8Encode(object,this.bytes,this.pos);this.pos+=byteLength;}encodeObject(object,depth){// try to encode objects with custom codec first of non-primitives
const ext=this.extensionCodec.tryToEncode(object,this.context);if(ext!=null){this.encodeExtension(ext);}else if(Array.isArray(object)){this.encodeArray(object,depth);}else if(ArrayBuffer.isView(object)){this.encodeBinary(object);}else if(typeof object==="object"){this.encodeMap(object,depth);}else{// symbol, function and other special object come here unless extensionCodec handles them.
throw new Error(`Unrecognized object: ${Object.prototype.toString.apply(object)}`);}}encodeBinary(object){const size=object.byteLength;if(size<0x100){// bin 8
this.writeU8(0xc4);this.writeU8(size);}else if(size<0x10000){// bin 16
this.writeU8(0xc5);this.writeU16(size);}else if(size<0x100000000){// bin 32
this.writeU8(0xc6);this.writeU32(size);}else{throw new Error(`Too large binary: ${size}`);}const bytes=ensureUint8Array(object);this.writeU8a(bytes);}encodeArray(object,depth){const size=object.length;if(size<16){// fixarray
this.writeU8(0x90+size);}else if(size<0x10000){// array 16
this.writeU8(0xdc);this.writeU16(size);}else if(size<0x100000000){// array 32
this.writeU8(0xdd);this.writeU32(size);}else{throw new Error(`Too large array: ${size}`);}for(const item of object){this.doEncode(item,depth+1);}}countWithoutUndefined(object,keys){let count=0;for(const key of keys){if(object[key]!==undefined){count++;}}return count;}encodeMap(object,depth){const keys=Object.keys(object);if(this.sortKeys){keys.sort();}const size=this.ignoreUndefined?this.countWithoutUndefined(object,keys):keys.length;if(size<16){// fixmap
this.writeU8(0x80+size);}else if(size<0x10000){// map 16
this.writeU8(0xde);this.writeU16(size);}else if(size<0x100000000){// map 32
this.writeU8(0xdf);this.writeU32(size);}else{throw new Error(`Too large map object: ${size}`);}for(const key of keys){const value=object[key];if(!(this.ignoreUndefined&&value===undefined)){this.encodeString(key);this.doEncode(value,depth+1);}}}encodeExtension(ext){if(typeof ext.data==="function"){const data=ext.data(this.pos+6);const size=data.length;if(size>=0x100000000){throw new Error(`Too large extension object: ${size}`);}this.writeU8(0xc9);this.writeU32(size);this.writeI8(ext.type);this.writeU8a(data);return;}const size=ext.data.length;if(size===1){// fixext 1
this.writeU8(0xd4);}else if(size===2){// fixext 2
this.writeU8(0xd5);}else if(size===4){// fixext 4
this.writeU8(0xd6);}else if(size===8){// fixext 8
this.writeU8(0xd7);}else if(size===16){// fixext 16
this.writeU8(0xd8);}else if(size<0x100){// ext 8
this.writeU8(0xc7);this.writeU8(size);}else if(size<0x10000){// ext 16
this.writeU8(0xc8);this.writeU16(size);}else if(size<0x100000000){// ext 32
this.writeU8(0xc9);this.writeU32(size);}else{throw new Error(`Too large extension object: ${size}`);}this.writeI8(ext.type);this.writeU8a(ext.data);}writeU8(value){this.ensureBufferSizeToWrite(1);this.view.setUint8(this.pos,value);this.pos++;}writeU8a(values){const size=values.length;this.ensureBufferSizeToWrite(size);this.bytes.set(values,this.pos);this.pos+=size;}writeI8(value){this.ensureBufferSizeToWrite(1);this.view.setInt8(this.pos,value);this.pos++;}writeU16(value){this.ensureBufferSizeToWrite(2);this.view.setUint16(this.pos,value);this.pos+=2;}writeI16(value){this.ensureBufferSizeToWrite(2);this.view.setInt16(this.pos,value);this.pos+=2;}writeU32(value){this.ensureBufferSizeToWrite(4);this.view.setUint32(this.pos,value);this.pos+=4;}writeI32(value){this.ensureBufferSizeToWrite(4);this.view.setInt32(this.pos,value);this.pos+=4;}writeF32(value){this.ensureBufferSizeToWrite(4);this.view.setFloat32(this.pos,value);this.pos+=4;}writeF64(value){this.ensureBufferSizeToWrite(8);this.view.setFloat64(this.pos,value);this.pos+=8;}writeU64(value){this.ensureBufferSizeToWrite(8);setUint64(this.view,this.pos,value);this.pos+=8;}writeI64(value){this.ensureBufferSizeToWrite(8);setInt64(this.view,this.pos,value);this.pos+=8;}writeBigUint64(value){this.ensureBufferSizeToWrite(8);this.view.setBigUint64(this.pos,value);this.pos+=8;}writeBigInt64(value){this.ensureBufferSizeToWrite(8);this.view.setBigInt64(this.pos,value);this.pos+=8;}};DEFAULT_MAX_KEY_LENGTH=16;DEFAULT_MAX_LENGTH_PER_KEY=16;CachedKeyDecoder=class CachedKeyDecoder{constructor(maxKeyLength=DEFAULT_MAX_KEY_LENGTH,maxLengthPerKey=DEFAULT_MAX_LENGTH_PER_KEY){this.hit=0;this.miss=0;this.maxKeyLength=maxKeyLength;this.maxLengthPerKey=maxLengthPerKey;// avoid `new Array(N)`, which makes a sparse array,
// because a sparse array is typically slower than a non-sparse array.
this.caches=[];for(let i=0;i<this.maxKeyLength;i++){this.caches.push([]);}}canBeCached(byteLength){return byteLength>0&&byteLength<=this.maxKeyLength;}find(bytes,inputOffset,byteLength){const records=this.caches[byteLength-1];FIND_CHUNK:for(const record of records){const recordBytes=record.bytes;for(let j=0;j<byteLength;j++){if(recordBytes[j]!==bytes[inputOffset+j]){continue FIND_CHUNK;}}return record.str;}return null;}store(bytes,value){const records=this.caches[bytes.length-1];const record={bytes,str:value};if(records.length>=this.maxLengthPerKey){// `records` are full!
// Set `record` to an arbitrary position.
records[Math.random()*records.length|0]=record;}else{records.push(record);}}decode(bytes,inputOffset,byteLength){const cachedValue=this.find(bytes,inputOffset,byteLength);if(cachedValue!=null){this.hit++;return cachedValue;}this.miss++;const str=utf8DecodeJs(bytes,inputOffset,byteLength);// Ensure to copy a slice of bytes because the bytes may be a NodeJS Buffer and Buffer#slice() returns a reference to its internal ArrayBuffer.
const slicedCopyOfBytes=Uint8Array.prototype.slice.call(bytes,inputOffset,inputOffset+byteLength);this.store(slicedCopyOfBytes,str);return str;}};STATE_ARRAY="array";STATE_MAP_KEY="map_key";STATE_MAP_VALUE="map_value";mapKeyConverter=key=>{if(typeof key==="string"||typeof key==="number"){return key;}throw new DecodeError("The type of key must be string or number but "+typeof key);};StackPool=class StackPool{constructor(){this.stack=[];this.stackHeadPosition=-1;}get length(){return this.stackHeadPosition+1;}top(){return this.stack[this.stackHeadPosition];}pushArrayState(size){const state=this.getUninitializedStateFromPool();state.type=STATE_ARRAY;state.position=0;state.size=size;state.array=new Array(size);}pushMapState(size){const state=this.getUninitializedStateFromPool();state.type=STATE_MAP_KEY;state.readCount=0;state.size=size;state.map={};}getUninitializedStateFromPool(){this.stackHeadPosition++;if(this.stackHeadPosition===this.stack.length){const partialState={type:undefined,size:0,array:undefined,position:0,readCount:0,map:undefined,key:null};this.stack.push(partialState);}return this.stack[this.stackHeadPosition];}release(state){const topStackState=this.stack[this.stackHeadPosition];if(topStackState!==state){throw new Error("Invalid stack state. Released state is not on top of the stack.");}if(state.type===STATE_ARRAY){const partialState=state;partialState.size=0;partialState.array=undefined;partialState.position=0;partialState.type=undefined;}if(state.type===STATE_MAP_KEY||state.type===STATE_MAP_VALUE){const partialState=state;partialState.size=0;partialState.map=undefined;partialState.readCount=0;partialState.type=undefined;}this.stackHeadPosition--;}reset(){this.stack.length=0;this.stackHeadPosition=-1;}};HEAD_BYTE_REQUIRED=-1;EMPTY_VIEW=new DataView(new ArrayBuffer(0));EMPTY_BYTES=new Uint8Array(EMPTY_VIEW.buffer);try{// IE11: The spec says it should throw RangeError,
// IE11: but in IE11 it throws TypeError.
EMPTY_VIEW.getInt8(0);}catch(e){if(!(e instanceof RangeError)){throw new Error("This module is not supported in the current JavaScript engine because DataView does not throw RangeError on out-of-bounds access");}}MORE_DATA=new RangeError("Insufficient data");sharedCachedKeyDecoder=new CachedKeyDecoder();Decoder=class Decoder{constructor(options){var _options$extensionCod2,_options$useBigInt2,_options$rawStrings,_options$maxStrLength,_options$maxBinLength,_options$maxArrayLeng,_options$maxMapLength,_options$maxExtLength,_options$mapKeyConver;this.totalPos=0;this.pos=0;this.view=EMPTY_VIEW;this.bytes=EMPTY_BYTES;this.headByte=HEAD_BYTE_REQUIRED;this.stack=new StackPool();this.entered=false;this.extensionCodec=(_options$extensionCod2=options===null||options===void 0?void 0:options.extensionCodec)!==null&&_options$extensionCod2!==void 0?_options$extensionCod2:ExtensionCodec.defaultCodec;this.context=options===null||options===void 0?void 0:options.context;// needs a type assertion because EncoderOptions has no context property when ContextType is undefined
this.useBigInt64=(_options$useBigInt2=options===null||options===void 0?void 0:options.useBigInt64)!==null&&_options$useBigInt2!==void 0?_options$useBigInt2:false;this.rawStrings=(_options$rawStrings=options===null||options===void 0?void 0:options.rawStrings)!==null&&_options$rawStrings!==void 0?_options$rawStrings:false;this.maxStrLength=(_options$maxStrLength=options===null||options===void 0?void 0:options.maxStrLength)!==null&&_options$maxStrLength!==void 0?_options$maxStrLength:UINT32_MAX;this.maxBinLength=(_options$maxBinLength=options===null||options===void 0?void 0:options.maxBinLength)!==null&&_options$maxBinLength!==void 0?_options$maxBinLength:UINT32_MAX;this.maxArrayLength=(_options$maxArrayLeng=options===null||options===void 0?void 0:options.maxArrayLength)!==null&&_options$maxArrayLeng!==void 0?_options$maxArrayLeng:UINT32_MAX;this.maxMapLength=(_options$maxMapLength=options===null||options===void 0?void 0:options.maxMapLength)!==null&&_options$maxMapLength!==void 0?_options$maxMapLength:UINT32_MAX;this.maxExtLength=(_options$maxExtLength=options===null||options===void 0?void 0:options.maxExtLength)!==null&&_options$maxExtLength!==void 0?_options$maxExtLength:UINT32_MAX;this.keyDecoder=(options===null||options===void 0?void 0:options.keyDecoder)!==undefined?options.keyDecoder:sharedCachedKeyDecoder;this.mapKeyConverter=(_options$mapKeyConver=options===null||options===void 0?void 0:options.mapKeyConverter)!==null&&_options$mapKeyConver!==void 0?_options$mapKeyConver:mapKeyConverter;}clone(){// eslint-disable-next-line @typescript-eslint/no-unsafe-argument
return new Decoder({extensionCodec:this.extensionCodec,context:this.context,useBigInt64:this.useBigInt64,rawStrings:this.rawStrings,maxStrLength:this.maxStrLength,maxBinLength:this.maxBinLength,maxArrayLength:this.maxArrayLength,maxMapLength:this.maxMapLength,maxExtLength:this.maxExtLength,keyDecoder:this.keyDecoder});}reinitializeState(){this.totalPos=0;this.headByte=HEAD_BYTE_REQUIRED;this.stack.reset();// view, bytes, and pos will be re-initialized in setBuffer()
}setBuffer(buffer){const bytes=ensureUint8Array(buffer);this.bytes=bytes;this.view=new DataView(bytes.buffer,bytes.byteOffset,bytes.byteLength);this.pos=0;}appendBuffer(buffer){if(this.headByte===HEAD_BYTE_REQUIRED&&!this.hasRemaining(1)){this.setBuffer(buffer);}else{const remainingData=this.bytes.subarray(this.pos);const newData=ensureUint8Array(buffer);// concat remainingData + newData
const newBuffer=new Uint8Array(remainingData.length+newData.length);newBuffer.set(remainingData);newBuffer.set(newData,remainingData.length);this.setBuffer(newBuffer);}}hasRemaining(size){return this.view.byteLength-this.pos>=size;}createExtraByteError(posToShow){const{view,pos}=this;return new RangeError(`Extra ${view.byteLength-pos} of ${view.byteLength} byte(s) found at buffer[${posToShow}]`);}/**
     * @throws {@link DecodeError}
     * @throws {@link RangeError}
     */decode(buffer){if(this.entered){const instance=this.clone();return instance.decode(buffer);}try{this.entered=true;this.reinitializeState();this.setBuffer(buffer);const object=this.doDecodeSync();if(this.hasRemaining(1)){throw this.createExtraByteError(this.pos);}return object;}finally{this.entered=false;}}*decodeMulti(buffer){if(this.entered){const instance=this.clone();yield*instance.decodeMulti(buffer);return;}try{this.entered=true;this.reinitializeState();this.setBuffer(buffer);while(this.hasRemaining(1)){yield this.doDecodeSync();}}finally{this.entered=false;}}decodeAsync(stream){var _this20=this;return _asyncToGenerator(function*(){if(_this20.entered){const instance=_this20.clone();return instance.decodeAsync(stream);}try{_this20.entered=true;let decoded=false;let object;var _iteratorAbruptCompletion=false;var _didIteratorError=false;var _iteratorError;try{for(var _iterator=_asyncIterator(stream),_step;_iteratorAbruptCompletion=!(_step=yield _iterator.next()).done;_iteratorAbruptCompletion=false){const buffer=_step.value;{if(decoded){_this20.entered=false;throw _this20.createExtraByteError(_this20.totalPos);}_this20.appendBuffer(buffer);try{object=_this20.doDecodeSync();decoded=true;}catch(e){if(!(e instanceof RangeError)){throw e;// rethrow
}// fallthrough
}_this20.totalPos+=_this20.pos;}}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(_iteratorAbruptCompletion&&_iterator.return!=null){yield _iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}if(decoded){if(_this20.hasRemaining(1)){throw _this20.createExtraByteError(_this20.totalPos);}return object;}const{headByte,pos,totalPos}=_this20;throw new RangeError(`Insufficient data in parsing ${prettyByte(headByte)} at ${totalPos} (${pos} in the current buffer)`);}finally{_this20.entered=false;}})();}decodeArrayStream(stream){return this.decodeMultiAsync(stream,true);}decodeStream(stream){return this.decodeMultiAsync(stream,false);}decodeMultiAsync(stream,isArray){var _this=this;return _wrapAsyncGenerator(function*(){if(_this.entered){const instance=_this.clone();yield*_asyncGeneratorDelegate(_asyncIterator(instance.decodeMultiAsync(stream,isArray)),_awaitAsyncGenerator);return;}try{_this.entered=true;let isArrayHeaderRequired=isArray;let arrayItemsLeft=-1;var _iteratorAbruptCompletion2=false;var _didIteratorError2=false;var _iteratorError2;try{for(var _iterator2=_asyncIterator(stream),_step2;_iteratorAbruptCompletion2=!(_step2=yield _awaitAsyncGenerator(_iterator2.next())).done;_iteratorAbruptCompletion2=false){const buffer=_step2.value;{if(isArray&&arrayItemsLeft===0){throw _this.createExtraByteError(_this.totalPos);}_this.appendBuffer(buffer);if(isArrayHeaderRequired){arrayItemsLeft=_this.readArraySize();isArrayHeaderRequired=false;_this.complete();}try{while(true){yield _this.doDecodeSync();if(--arrayItemsLeft===0){break;}}}catch(e){if(!(e instanceof RangeError)){throw e;// rethrow
}// fallthrough
}_this.totalPos+=_this.pos;}}}catch(err){_didIteratorError2=true;_iteratorError2=err;}finally{try{if(_iteratorAbruptCompletion2&&_iterator2.return!=null){yield _awaitAsyncGenerator(_iterator2.return());}}finally{if(_didIteratorError2){throw _iteratorError2;}}}}finally{_this.entered=false;}})();}doDecodeSync(){DECODE:while(true){const headByte=this.readHeadByte();let object;if(headByte>=0xe0){// negative fixint (111x xxxx) 0xe0 - 0xff
object=headByte-0x100;}else if(headByte<0xc0){if(headByte<0x80){// positive fixint (0xxx xxxx) 0x00 - 0x7f
object=headByte;}else if(headByte<0x90){// fixmap (1000 xxxx) 0x80 - 0x8f
const size=headByte-0x80;if(size!==0){this.pushMapState(size);this.complete();continue DECODE;}else{object={};}}else if(headByte<0xa0){// fixarray (1001 xxxx) 0x90 - 0x9f
const size=headByte-0x90;if(size!==0){this.pushArrayState(size);this.complete();continue DECODE;}else{object=[];}}else{// fixstr (101x xxxx) 0xa0 - 0xbf
const byteLength=headByte-0xa0;object=this.decodeString(byteLength,0);}}else if(headByte===0xc0){// nil
object=null;}else if(headByte===0xc2){// false
object=false;}else if(headByte===0xc3){// true
object=true;}else if(headByte===0xca){// float 32
object=this.readF32();}else if(headByte===0xcb){// float 64
object=this.readF64();}else if(headByte===0xcc){// uint 8
object=this.readU8();}else if(headByte===0xcd){// uint 16
object=this.readU16();}else if(headByte===0xce){// uint 32
object=this.readU32();}else if(headByte===0xcf){// uint 64
if(this.useBigInt64){object=this.readU64AsBigInt();}else{object=this.readU64();}}else if(headByte===0xd0){// int 8
object=this.readI8();}else if(headByte===0xd1){// int 16
object=this.readI16();}else if(headByte===0xd2){// int 32
object=this.readI32();}else if(headByte===0xd3){// int 64
if(this.useBigInt64){object=this.readI64AsBigInt();}else{object=this.readI64();}}else if(headByte===0xd9){// str 8
const byteLength=this.lookU8();object=this.decodeString(byteLength,1);}else if(headByte===0xda){// str 16
const byteLength=this.lookU16();object=this.decodeString(byteLength,2);}else if(headByte===0xdb){// str 32
const byteLength=this.lookU32();object=this.decodeString(byteLength,4);}else if(headByte===0xdc){// array 16
const size=this.readU16();if(size!==0){this.pushArrayState(size);this.complete();continue DECODE;}else{object=[];}}else if(headByte===0xdd){// array 32
const size=this.readU32();if(size!==0){this.pushArrayState(size);this.complete();continue DECODE;}else{object=[];}}else if(headByte===0xde){// map 16
const size=this.readU16();if(size!==0){this.pushMapState(size);this.complete();continue DECODE;}else{object={};}}else if(headByte===0xdf){// map 32
const size=this.readU32();if(size!==0){this.pushMapState(size);this.complete();continue DECODE;}else{object={};}}else if(headByte===0xc4){// bin 8
const size=this.lookU8();object=this.decodeBinary(size,1);}else if(headByte===0xc5){// bin 16
const size=this.lookU16();object=this.decodeBinary(size,2);}else if(headByte===0xc6){// bin 32
const size=this.lookU32();object=this.decodeBinary(size,4);}else if(headByte===0xd4){// fixext 1
object=this.decodeExtension(1,0);}else if(headByte===0xd5){// fixext 2
object=this.decodeExtension(2,0);}else if(headByte===0xd6){// fixext 4
object=this.decodeExtension(4,0);}else if(headByte===0xd7){// fixext 8
object=this.decodeExtension(8,0);}else if(headByte===0xd8){// fixext 16
object=this.decodeExtension(16,0);}else if(headByte===0xc7){// ext 8
const size=this.lookU8();object=this.decodeExtension(size,1);}else if(headByte===0xc8){// ext 16
const size=this.lookU16();object=this.decodeExtension(size,2);}else if(headByte===0xc9){// ext 32
const size=this.lookU32();object=this.decodeExtension(size,4);}else{throw new DecodeError(`Unrecognized type byte: ${prettyByte(headByte)}`);}this.complete();const stack=this.stack;while(stack.length>0){// arrays and maps
const state=stack.top();if(state.type===STATE_ARRAY){state.array[state.position]=object;state.position++;if(state.position===state.size){object=state.array;stack.release(state);}else{continue DECODE;}}else if(state.type===STATE_MAP_KEY){if(object==="__proto__"){throw new DecodeError("The key __proto__ is not allowed");}state.key=this.mapKeyConverter(object);state.type=STATE_MAP_VALUE;continue DECODE;}else{// it must be `state.type === State.MAP_VALUE` here
state.map[state.key]=object;state.readCount++;if(state.readCount===state.size){object=state.map;stack.release(state);}else{state.key=null;state.type=STATE_MAP_KEY;continue DECODE;}}}return object;}}readHeadByte(){if(this.headByte===HEAD_BYTE_REQUIRED){this.headByte=this.readU8();// console.log("headByte", prettyByte(this.headByte));
}return this.headByte;}complete(){this.headByte=HEAD_BYTE_REQUIRED;}readArraySize(){const headByte=this.readHeadByte();switch(headByte){case 0xdc:return this.readU16();case 0xdd:return this.readU32();default:{if(headByte<0xa0){return headByte-0x90;}else{throw new DecodeError(`Unrecognized array type byte: ${prettyByte(headByte)}`);}}}}pushMapState(size){if(size>this.maxMapLength){throw new DecodeError(`Max length exceeded: map length (${size}) > maxMapLengthLength (${this.maxMapLength})`);}this.stack.pushMapState(size);}pushArrayState(size){if(size>this.maxArrayLength){throw new DecodeError(`Max length exceeded: array length (${size}) > maxArrayLength (${this.maxArrayLength})`);}this.stack.pushArrayState(size);}decodeString(byteLength,headerOffset){if(!this.rawStrings||this.stateIsMapKey()){return this.decodeUtf8String(byteLength,headerOffset);}return this.decodeBinary(byteLength,headerOffset);}/**
     * @throws {@link RangeError}
     */decodeUtf8String(byteLength,headerOffset){var _this$keyDecoder;if(byteLength>this.maxStrLength){throw new DecodeError(`Max length exceeded: UTF-8 byte length (${byteLength}) > maxStrLength (${this.maxStrLength})`);}if(this.bytes.byteLength<this.pos+headerOffset+byteLength){throw MORE_DATA;}const offset=this.pos+headerOffset;let object;if(this.stateIsMapKey()&&(_this$keyDecoder=this.keyDecoder)!==null&&_this$keyDecoder!==void 0&&_this$keyDecoder.canBeCached(byteLength)){object=this.keyDecoder.decode(this.bytes,offset,byteLength);}else{object=utf8Decode(this.bytes,offset,byteLength);}this.pos+=headerOffset+byteLength;return object;}stateIsMapKey(){if(this.stack.length>0){const state=this.stack.top();return state.type===STATE_MAP_KEY;}return false;}/**
     * @throws {@link RangeError}
     */decodeBinary(byteLength,headOffset){if(byteLength>this.maxBinLength){throw new DecodeError(`Max length exceeded: bin length (${byteLength}) > maxBinLength (${this.maxBinLength})`);}if(!this.hasRemaining(byteLength+headOffset)){throw MORE_DATA;}const offset=this.pos+headOffset;const object=this.bytes.subarray(offset,offset+byteLength);this.pos+=headOffset+byteLength;return object;}decodeExtension(size,headOffset){if(size>this.maxExtLength){throw new DecodeError(`Max length exceeded: ext length (${size}) > maxExtLength (${this.maxExtLength})`);}const extType=this.view.getInt8(this.pos+headOffset);const data=this.decodeBinary(size,headOffset+1/* extType */);return this.extensionCodec.decode(data,extType,this.context);}lookU8(){return this.view.getUint8(this.pos);}lookU16(){return this.view.getUint16(this.pos);}lookU32(){return this.view.getUint32(this.pos);}readU8(){const value=this.view.getUint8(this.pos);this.pos++;return value;}readI8(){const value=this.view.getInt8(this.pos);this.pos++;return value;}readU16(){const value=this.view.getUint16(this.pos);this.pos+=2;return value;}readI16(){const value=this.view.getInt16(this.pos);this.pos+=2;return value;}readU32(){const value=this.view.getUint32(this.pos);this.pos+=4;return value;}readI32(){const value=this.view.getInt32(this.pos);this.pos+=4;return value;}readU64(){const value=getUint64(this.view,this.pos);this.pos+=8;return value;}readI64(){const value=getInt64(this.view,this.pos);this.pos+=8;return value;}readU64AsBigInt(){const value=this.view.getBigUint64(this.pos);this.pos+=8;return value;}readI64AsBigInt(){const value=this.view.getBigInt64(this.pos);this.pos+=8;return value;}readF32(){const value=this.view.getFloat32(this.pos);this.pos+=4;return value;}readF64(){const value=this.view.getFloat64(this.pos);this.pos+=8;return value;}};_address=/*#__PURE__*/new WeakMap();_send=/*#__PURE__*/new WeakMap();RaftNode=class RaftNode{constructor(address,send){_classPrivateFieldInitSpec(this,_address,void 0);_classPrivateFieldInitSpec(this,_send,void 0);_classPrivateFieldSet(_address,this,address);_classPrivateFieldSet(_send,this,send);}get address(){return _classPrivateFieldGet(_address,this);}send(data){_classPrivateFieldGet(_send,this).call(this,data);}};// Encapsulation of a message used in the Raft protocol.  This implementation
// provides two serialization options: JSON object, and JSON array.
_state=/*#__PURE__*/new WeakMap();_leader=/*#__PURE__*/new WeakMap();_term=/*#__PURE__*/new WeakMap();_address2=/*#__PURE__*/new WeakMap();_type=/*#__PURE__*/new WeakMap();_granted=/*#__PURE__*/new WeakMap();RaftMessage=class RaftMessage{constructor(state,leader,term,address,type,granted){_classPrivateFieldInitSpec(this,_state,void 0);_classPrivateFieldInitSpec(this,_leader,void 0);_classPrivateFieldInitSpec(this,_term,void 0);_classPrivateFieldInitSpec(this,_address2,void 0);_classPrivateFieldInitSpec(this,_type,void 0);_classPrivateFieldInitSpec(this,_granted,void 0);_classPrivateFieldSet(_state,this,state);_classPrivateFieldSet(_leader,this,leader);_classPrivateFieldSet(_term,this,term);_classPrivateFieldSet(_address2,this,address);_classPrivateFieldSet(_type,this,type);_classPrivateFieldSet(_granted,this,granted);}get state(){return _classPrivateFieldGet(_state,this);}get leader(){return _classPrivateFieldGet(_leader,this);}get term(){return _classPrivateFieldGet(_term,this);}get address(){return _classPrivateFieldGet(_address2,this);}get type(){return _classPrivateFieldGet(_type,this);}get granted(){return _classPrivateFieldGet(_granted,this);}toJSON(){return{state:_classPrivateFieldGet(_state,this),leader:_classPrivateFieldGet(_leader,this),term:_classPrivateFieldGet(_term,this),address:_classPrivateFieldGet(_address2,this),type:_classPrivateFieldGet(_type,this),granted:_classPrivateFieldGet(_granted,this)};}static fromJSON(json){const msg=new RaftMessage(json.state,json.leader,json.term,json.address,json.type,json.granted);return msg;}toArray(){return[_classPrivateFieldGet(_state,this),_classPrivateFieldGet(_leader,this),_classPrivateFieldGet(_term,this),_classPrivateFieldGet(_address2,this),_classPrivateFieldGet(_type,this),_classPrivateFieldGet(_granted,this)];}static from(array){return new RaftMessage(array[0],array[1],array[2],array[3],array[4],array[5]);}toBuffer(){return encode(this.toArray());}static fromBuffer(buffer){const array=decode(buffer);return RaftMessage.from(array);}};_address3=/*#__PURE__*/new WeakMap();_electionMinTimeout=/*#__PURE__*/new WeakMap();_electionMaxTimeout=/*#__PURE__*/new WeakMap();_heatbeatInterval=/*#__PURE__*/new WeakMap();_heartbeatExpiration=/*#__PURE__*/new WeakMap();_electionExpiration=/*#__PURE__*/new WeakMap();_votesFor=/*#__PURE__*/new WeakMap();_votesGranted=/*#__PURE__*/new WeakMap();_nodes=/*#__PURE__*/new WeakMap();_state2=/*#__PURE__*/new WeakMap();_leader2=/*#__PURE__*/new WeakMap();_currentTerm=/*#__PURE__*/new WeakMap();_Raft_brand=/*#__PURE__*/new WeakSet();Raft=class Raft extends EventTarget{constructor(settings){super();_classPrivateMethodInitSpec(this,_Raft_brand);// Initiated by leaders as heartbeat.
_classPrivateFieldInitSpec(this,_address3,void 0);_classPrivateFieldInitSpec(this,_electionMinTimeout,void 0);_classPrivateFieldInitSpec(this,_electionMaxTimeout,void 0);_classPrivateFieldInitSpec(this,_heatbeatInterval,void 0);_classPrivateFieldInitSpec(this,_heartbeatExpiration,undefined);_classPrivateFieldInitSpec(this,_electionExpiration,undefined);_classPrivateFieldInitSpec(this,_votesFor,undefined);_classPrivateFieldInitSpec(this,_votesGranted,0);_classPrivateFieldInitSpec(this,_nodes,[]);// §5.2: When nodes start up, they begin as followers.
_classPrivateFieldInitSpec(this,_state2,Raft.FOLLOWER);_classPrivateFieldInitSpec(this,_leader2,undefined);_classPrivateFieldInitSpec(this,_currentTerm,0);_classPrivateFieldSet(_address3,this,settings.address);_classPrivateFieldSet(_electionMinTimeout,this,settings.electionMinTimeout);_classPrivateFieldSet(_electionMaxTimeout,this,settings.electionMaxTimeout);_classPrivateFieldSet(_heatbeatInterval,this,settings.heartbeatInterval);// §5.2: If a follower receives no communication over a period of time
// called the election timeout, then it assumes there is no viable
// leader and begins an election to choose a new leader.
_classPrivateFieldSet(_electionExpiration,this,performance.now()+_assertClassBrand(_Raft_brand,this,_electionTimeout).call(this));}get leader(){return _classPrivateFieldGet(_state2,this)===Raft.LEADER;}onRaftMessage(data,sendReply){//		console.log(`RAFT: onRaftMessage(${data})`);
const msg=RaftMessage.fromBuffer(data);// §5.1:  Current terms are exchanged whenever servers
// communicate
if(msg.term>_classPrivateFieldGet(_currentTerm,this)){// §5.1: If a candidate or leader discovers that its
// term is out of date, it immediately reverts to
// follower state.
if(_classPrivateFieldGet(_state2,this)!==Raft.FOLLOWER){_classPrivateFieldSet(_state2,this,Raft.FOLLOWER);}_classPrivateFieldSet(_heartbeatExpiration,this,undefined);_classPrivateFieldSet(_electionExpiration,this,performance.now()+_assertClassBrand(_Raft_brand,this,_electionTimeout).call(this));if(_classPrivateFieldGet(_leader2,this)!==msg.leader){_classPrivateFieldSet(_leader2,this,msg.leader);}_classPrivateFieldSet(_currentTerm,this,msg.term);_assertClassBrand(_Raft_brand,this,_resetVotes).call(this);}else if(msg.term<_classPrivateFieldGet(_currentTerm,this)){// §5.1: If a server receives a request with a stale
// term number, it rejects the request
return;}switch(_classPrivateFieldGet(_state2,this)){case Raft.FOLLOWER:switch(msg.type){case Raft.RPC_REQUEST_VOTE:_assertClassBrand(_Raft_brand,this,_onRequestVote).call(this,msg,sendReply);break;case Raft.RPC_APPEND_ENTRY:// §5.2: Leaders send periodic heartbeats to
// all followers in order to maintain their
// authority.
_classPrivateFieldSet(_electionExpiration,this,performance.now()+_assertClassBrand(_Raft_brand,this,_electionTimeout).call(this));break;}break;case Raft.CANDIDATE:switch(msg.type){case Raft.RPC_VOTE:_assertClassBrand(_Raft_brand,this,_onVote).call(this,msg);break;case Raft.RPC_APPEND_ENTRY:// §5.2: If the leader’s term is at least
// as large as the candidate’s current term,
// then the candidate recognizes the leader as
// legitimate and returns to follower state.
_classPrivateFieldSet(_leader2,this,msg.leader);_classPrivateFieldSet(_state2,this,Raft.FOLLOWER);_classPrivateFieldSet(_heartbeatExpiration,this,undefined);_classPrivateFieldSet(_electionExpiration,this,performance.now()+_assertClassBrand(_Raft_brand,this,_electionTimeout).call(this));break;}break;}}update(timestamp){if(timestamp>=_classPrivateFieldGet(_heartbeatExpiration,this)){_assertClassBrand(_Raft_brand,this,_onHeartbeatExpiration).call(this);}if(timestamp>=_classPrivateFieldGet(_electionExpiration,this)){_assertClassBrand(_Raft_brand,this,_onElectionExpiration).call(this);}}join(address,send){console.log(`RAFT: join(${address})`);if(address===_classPrivateFieldGet(_address3,this)){return;}const pos=_classPrivateFieldGet(_nodes,this).findIndex(node=>node.address===address);if(pos!==-1){return;}_classPrivateFieldGet(_nodes,this).push(new RaftNode(address,send));this.dispatchEvent(new CustomEvent('join',{detail:{address}}));}leave(address){console.log(`RAFT: leave(${address})`);const pos=_classPrivateFieldGet(_nodes,this).findIndex(node=>node.address===address);if(pos===-1){return;}_classPrivateFieldGet(_nodes,this).splice(pos,1);this.dispatchEvent(new CustomEvent('leave',{detail:{address}}));}close(){console.log(`RAFT: close)`);if(_classPrivateFieldGet(_state2,this)===0){return;}_classPrivateFieldSet(_state2,this,0);this.dispatchEvent(new CustomEvent('closing'));for(const node of _classPrivateFieldGet(_nodes,this)){this.leave(node.address);}this.dispatchEvent(new CustomEvent('closed'));_classPrivateFieldSet(_heartbeatExpiration,this,undefined);_classPrivateFieldSet(_electionExpiration,this,undefined);}};// vim: tabstop=8 softtabstop=0 noexpandtab shiftwidth=8 nosmarttab
// Copyright 2025 Digital Signage Bunny Corp. Use of this source code is
// governed by an MIT-style license that can be found in the LICENSE file or at
// https://opensource.org/licenses/MIT.
_Raft=Raft;// §5.1: At any given time, in one of three states: leader, follower,
// or candidate.
_defineProperty(Raft,"LEADER",1);_defineProperty(Raft,"CANDIDATE",2);_defineProperty(Raft,"FOLLOWER",3);_defineProperty(Raft,"states",{1:"LEADER",2:"CANDIDATE",3:"FOLLOWER"});_defineProperty(Raft,"RPC_REQUEST_VOTE","poll");// Initiated by candidates during elections.
_defineProperty(Raft,"RPC_VOTE","vote");_defineProperty(Raft,"RPC_APPEND_ENTRY","append");MAX_BACKOFF_TIMEOUT=18*1000;MIN_BACKOFF_TIMEOUT=3*1000;CONNECT_TIMEOUT=30*1000;ELECTION_MIN_TIMEOUT=1500;ELECTION_MAX_TIMEOUT=3000;HEARTBEAT_INTERVAL=500;Peer=class Peer{constructor(id){this._id=id;this._channel=undefined;}get id(){return this._id;}get readyState(){if(typeof this._channel==="undefined"){return"new";}return this._channel.readyState;}set channel(channel){this._channel=channel;}send(data){if(this.readyState!=="open"){return;}try{var _this$_channel;(_this$_channel=this._channel)===null||_this$_channel===void 0||_this$_channel.send(data);}catch(e){console.warn(e);}}};RaftCluster=class RaftCluster{constructor(decl){this.decl=decl;this._signaling_server_index=-1;this._peers=new Map();this._signaling_servers=decl.signalingServers;this._ws_onmessage_bound=event=>this._ws_onmessage(event);this._ws_onerror_bound=event=>this._ws_onerror(event);this._ws_onclose_bound=event=>this._ws_onclose(event);this._rtc=new RTCMesh(decl);this._rtc.addEventListener('offer',event=>{var _this$_ws;console.log(event);(_this$_ws=this._ws)===null||_this$_ws===void 0||_this$_ws.send(JSON.stringify({"cmd":"offer","target":event.detail.id,"sdp":event.detail.sdp}));});this._rtc.addEventListener('answer',event=>{var _this$_ws2;console.log(event);(_this$_ws2=this._ws)===null||_this$_ws2===void 0||_this$_ws2.send(JSON.stringify({"cmd":"answer","target":event.detail.id,"sdp":event.detail.sdp}));});this._rtc.addEventListener('icecandidate',event=>{var _this$_ws3;console.log(event);(_this$_ws3=this._ws)===null||_this$_ws3===void 0||_this$_ws3.send(JSON.stringify({"cmd":"icecandidate","target":event.detail.id,"candidate":event.detail.candidate}));});this._rtc.addEventListener('disconnected',event=>{var _this$_ws4;console.warn('RTC disconnected',event);(_this$_ws4=this._ws)===null||_this$_ws4===void 0||_this$_ws4.send(JSON.stringify({"cmd":"disconnected","target":event.detail.id,"candidate":event.detail.candidate}));});this._rtc.addEventListener('failed',event=>{var _this$_ws5;console.warn('RTC failed',event);(_this$_ws5=this._ws)===null||_this$_ws5===void 0||_this$_ws5.send(JSON.stringify({"cmd":"failed","target":event.detail.id}));});this._raft=new Raft({address:this._rtc.id,electionMinTimeout:ELECTION_MIN_TIMEOUT,electionMaxTimeout:ELECTION_MAX_TIMEOUT,heartbeatInterval:HEARTBEAT_INTERVAL});for(const id of this._rtc.peers){if(id===this._rtc.id){continue;}const peer=new Peer(id);this._raft.join(id,data=>peer.send(data));this._peers.set(id,peer);}this._rtc.addEventListener('addchannel',event=>{console.log('RTC addchannel',event);const peer=this._peers.get(event.detail.id);if(typeof peer==="undefined"){return;}const channel=this._rtc.user_channel(peer.id);channel===null||channel===void 0||channel.addEventListener('message',event=>{this._raft.onRaftMessage(event.data,data=>peer.send(data));});peer.channel=channel;});// §5.5: Follower and candidate crashes
// Avoid direct failure by removing node from list, node recovery will rejoin
// the list and update with the next hearbeat or election.
this._rtc.addEventListener('removechannel',event=>{console.log('RTC removechannel',event);const peer=this._peers.get(event.detail.id);if(typeof peer==="undefined"){return;}peer.channel=undefined;});}get leader(){return this._raft.leader;}join(){console.log('Raft Cluster: join');this._try_connect();}leave(){console.log('Raft Cluster: leave');}update(timestamp){this._raft.update(timestamp);}broadcast(data){if(this._raft.leader){this._rtc.broadcast(data);}}addEventListener(type,listener){this._rtc.addEventListener(type,listener);}removeEventListener(type,listener){this._rtc.removeEventListener(type,listener);}_ws_close(){var _this$_ws6,_this$_ws7,_this$_ws8,_this$_ws9;if(typeof this._ws_connect_timeout_id!=="undefined"){clearTimeout(this._ws_connect_timeout_id);this._ws_connect_timeout_id=undefined;}(_this$_ws6=this._ws)===null||_this$_ws6===void 0||_this$_ws6.removeEventListener('message',this._ws_onmessage_bound);(_this$_ws7=this._ws)===null||_this$_ws7===void 0||_this$_ws7.removeEventListener('error',this._ws_onerror_bound);(_this$_ws8=this._ws)===null||_this$_ws8===void 0||_this$_ws8.removeEventListener('close',this._ws_onclose_bound);if(((_this$_ws9=this._ws)===null||_this$_ws9===void 0?void 0:_this$_ws9.readyState)!==WebSocket.CLOSED){var _this$_ws0;(_this$_ws0=this._ws)===null||_this$_ws0===void 0||_this$_ws0.close();// can raise onerror
}this._ws=undefined;}_ws_onclose(event){console.log('WS closed.',event);this._ws_close();this._schedule_reconnect();}// The error event is fired when a connection with a WebSocket has been closed due to an error.
_ws_onerror(event){console.log('WS error.',event);this._ws_close();this._schedule_reconnect();}_abort_connect(){console.warn("WS connect timeout, aborting.");this._ws_close();this._schedule_reconnect();}_ws_onmessage(event){console.log(event);const json=JSON.parse(event.data);switch(json.cmd){case'offer':this._rtc.createAnswer(json.id,json.sdp);break;case'negotiationneeded':this._rtc.createOffer(json.id);break;case'answer':this._rtc.addAnswer(json.id,json.sdp);break;case'disconnected':case'failed':this._rtc.close(json.id).catch(e=>{console.warn(e);}).finally(()=>{var _this$_ws1;(_this$_ws1=this._ws)===null||_this$_ws1===void 0||_this$_ws1.send(JSON.stringify({"cmd":"negotiationneeded","target":json.id}));});break;case'icecandidate':this._rtc.addIceCandidate(json.id,json.candidate);break;}}_signaling_server(){this._signaling_server_index=(this._signaling_server_index+1)%this._signaling_servers.length;return this._signaling_servers[this._signaling_server_index];}_try_connect(){if(typeof this._ws_reconnect_timeout_id!=="undefined"){clearTimeout(this._ws_reconnect_timeout_id);this._ws_reconnect_timeout_id=undefined;}try{const signaling_server=this._signaling_server();console.log(`WS connecting to ${signaling_server.url}`);this._ws=new WebSocket(`${signaling_server.url}?group=${this._rtc.label}&id=${this._rtc.id}`);}catch(e){console.warn(e);this._ws=undefined;return;}this._ws_connect_timeout_id=setTimeout(this._abort_connect,CONNECT_TIMEOUT);this._ws.addEventListener('open',()=>{var _this$_ws11;console.log("WS connected.");if(typeof this._ws_connect_timeout_id!=="undefined"){clearTimeout(this._ws_connect_timeout_id);this._ws_connect_timeout_id=undefined;}for(const peer of this._rtc.peers){if(peer===this._rtc.id){continue;}const readyState=this._rtc.readyState(peer);switch(readyState){case"open":break;case"connecting":case"closing":console.log(`WEBRTC ${peer} readyState ${readyState}`);this._rtc.close(peer).catch(e=>{console.warn(e);}).finally(()=>{var _this$_ws10;(_this$_ws10=this._ws)===null||_this$_ws10===void 0||_this$_ws10.send(JSON.stringify({"cmd":"negotiationneeded","target":peer}));});break;default:console.log(`WEBRTC ${peer} readyState ${readyState}`);(_this$_ws11=this._ws)===null||_this$_ws11===void 0||_this$_ws11.send(JSON.stringify({"cmd":"negotiationneeded","target":peer}));break;}}});this._ws.addEventListener('message',this._ws_onmessage_bound);this._ws.addEventListener('error',this._ws_onerror_bound);this._ws.addEventListener('close',this._ws_onclose_bound);}_schedule_reconnect(){const delay=backoff_timeout();console.warn("WS reconnection in",delay/1000,"s");this._ws_reconnect_timeout_id=setTimeout(()=>{this._try_connect();},delay);}};// vim: tabstop=8 softtabstop=0 noexpandtab shiftwidth=8 nosmarttab
// Copyright 2025 Digital Signage Bunny Corp. Use of this source code is
// governed by an MIT-style license that can be found in the LICENSE file or at
// https://opensource.org/licenses/MIT.
ServiceWorkerPrefetch=class ServiceWorkerPrefetch extends EventTarget$1{constructor(){var _this21;super();_this21=this;this._activated=false;if('serviceWorker'in navigator){_asyncToGenerator(function*(){yield _this21._registerServiceWorker();})();}else{console.error("PREFETCH: ServiceWorker not supported.");}}_registerServiceWorker(){var _this22=this;return _asyncToGenerator(function*(){console.log("PREFETCH: Registering service worker ...");if(navigator.serviceWorker.controller){console.log(`PREFETCH: Currently controlled by:`,navigator.serviceWorker.controller);}else{console.log('PREFETCH: Not currently controlled by a service worker.');}navigator.serviceWorker.addEventListener('controllerchange',()=>{console.log(`PREFETCH: Now controlled by:`,navigator.serviceWorker.controller);});// Note href not URL.
const registration=yield navigator.serviceWorker.register(new URL('dist/prefetch.bundle.mjs',location.href),{scope:'/',type:'module'});console.log(`PREFETCH: Service worker registration successful with scope: ${registration.scope}.`);registration.addEventListener('updatefound',()=>{console.log("PREFETCH: Service worker updating ...");});if(registration.installing){_this22._serviceWorker=registration.installing;console.log("PREFETCH: Service worker installing ...");}else if(registration.waiting){_this22._serviceWorker=registration.waiting;console.log("PREFETCH: Service worker waiting ...");}else if(registration.active){_this22._serviceWorker=registration.active;console.log("PREFETCH: Service worker active.");console.log(navigator.serviceWorker);if(navigator.serviceWorker.controller){_this22._onActivatedWorker();}}if(typeof _this22._serviceWorker!=="undefined"){_this22._serviceWorker.addEventListener('statechange',e=>{console.log(e);if(e.target===null){return;}if(!(e.target instanceof ServiceWorker)){return;}console.log(`PREFETCH: Service worker state change: ${e.target.state}.`);if(e.target.state==="activated"){_this22._onActivatedWorker();}});navigator.serviceWorker.startMessages();}})();}acquireSources(scope,sources){var _this23=this;return _asyncToGenerator(function*(){console.log(`PREFETCH: setSources ${scope} ${JSON.stringify(sources)}`);if(!_this23._activated){console.warn(`PREFETCH: Not activated.`);return;}if(typeof _this23._prefetch==="undefined"){console.warn(`PREFETCH: Comlink not available.`);return;}yield _this23._prefetch.setSources(scope,sources);})();}releaseSources(_scope){return _asyncToGenerator(function*(){})();}// No-op, browser engine manages expiration LRU or similar.
// Simple pass-through.
getPath(origin){return origin;}_onActivatedWorker(){console.log(`PREFETCH: _onActivatedWorker`);if(this._activated){return;}if(typeof this._serviceWorker==="undefined"){return;}this._activated=true;console.log("PREFETCH: Service worker activated.");const channel=new MessageChannel();this._serviceWorker.postMessage(channel.port2,[channel.port2]);this._prefetch=wrap(channel.port1);channel.port1.start();}};window.requestIdleCallback=window.requestIdleCallback||function(cb){var start=Date.now();return setTimeout(function(){cb({didTimeout:false,timeRemaining:function(){return Math.max(0,50-(Date.now()-start));}});},1);};window.cancelIdleCallback=window.cancelIdleCallback||function(id){clearTimeout(id);};// vim: tabstop=8 softtabstop=0 noexpandtab shiftwidth=8 nosmarttab
// Copyright 2025 Digital Signage Bunny Corp. Use of this source code is
// governed by an MIT-style license that can be found in the LICENSE file or at
// https://opensource.org/licenses/MIT.
__decorate$1=undefined&&undefined.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;for(var i=decorators.length-1;i>=0;i--)if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;return c>3&&r&&Object.defineProperty(target,key,r),r;};WebPlaylistElement=(_WebPlaylistElement=class WebPlaylistElement extends i{render(){return x`
			<style>
				:host {
					width: ${this.width}px;
					height: ${this.height}px;
				}
			</style>
			<slot></slot><main></main><section></section>
		`;}constructor(){super();this.src="";this.src_id="";this.src_size=0;this.src_hash=undefined;this.src_integrity="";this.src_md5="";this.views=[];this.width=0;this.height=0;this.autoplay=false;this._worker=this._createWorker();this._scheduler=wrap(this._worker);this._renderer=new NullRenderer();this._channel=new MessageChannel();this._cluster=undefined;}// Helpers to access private fields in devtools.
get debugScheduler(){return this._scheduler;}get debugRenderer(){return this._renderer;}get debugCluster(){return this._cluster;}_createWorker(){return new Worker(new URL('../dist/scheduler.bundle.mjs',location.href).pathname,{type:'module',credentials:'omit',name:'Scheduler'// Shown in debugger.
});}// https://lit.dev/docs/components/lifecycle/#connectedcallback
connectedCallback(){super.connectedCallback();console.log("PLAYLIST: connectedCallback");}// https://lit.dev/docs/components/lifecycle/#disconnectedcallback
// Invoked when a component is removed from the document's DOM.
// Closest ECMAScript equivalent to a destructor, however should have
// a matching connectedCallback() if the element is added back to the
// DOM.
disconnectedCallback(){super.disconnectedCallback();console.log("PLAYLIST: disconnectedCallback");if(typeof this._raf_id!=="undefined"){window.cancelAnimationFrame(this._raf_id);this._raf_id=undefined;}if(typeof this._ric_id!=="undefined"){window.cancelIdleCallback(this._ric_id);this._ric_id=undefined;}this._scheduler[releaseProxy]();this._worker.terminate();this._renderer.close();}_createRenderer(prefetchFactory=ServiceWorkerPrefetch){if(this._section===null){throw new Error("cannot find <section> element to attach to.");}if(this._main===null){throw new Error("cannot find <main> element to attach to.");}const renderer=new WebRenderer(prefetchFactory);renderer.init();this._connectSchedulerToRenderer(this._scheduler,renderer);this._connectRaftCluster(this._scheduler,renderer);renderer.setAssetTarget(this._main);renderer.setRenderTarget(this._main);return renderer;}// https://lit.dev/docs/components/lifecycle/#firstupdated
// Called after the component's DOM has been updated the first time,
// immediately before updated() is called.
// Earliest opportunity to read properties and access the render root.
firstUpdated(changedProperties){console.log("PLAYLIST: firstUpdated");console.log("PLAYLIST",changedProperties);try{this._renderer=this._createRenderer();}catch(e){if(typeof e==="object"){for(const[key,value]of Object.entries(e)){console.error(`PLAYLIST: e: ${key}: ${value}`);}}console.error(`PLAYLIST: Failed to create renderer: ${e}`);throw e;}}// https://lit.dev/docs/components/lifecycle/#updated
// Called whenever the component’s update finishes and the element's
// DOM has been updated and rendered.
updated(changedProperties){console.log("PLAYLIST: updated");console.log(changedProperties);if(changedProperties.has('src')){if(this.src.length!==0&&this.src_id.length!==0&&this.src_size!==0&&typeof this.src_hash!=="undefined"&&this.src_integrity.length!==0&&this.src_md5.length!==0){this._onSrc(this.src,this.src_id,this.src_size,this.src_hash,this.src_integrity,this.src_md5);if(this.autoplay&&this.width!==0&&this.height!==0){console.log(`PLAYLIST: Auto-playing ${this.src} (${this.src_id})`);this.play();}}}if(changedProperties.has('views')){this._onViews(this.views);}if(changedProperties.has('width')||changedProperties.has('height')){this._onSize(this.width,this.height);}}_onSrc(src,id,size,hash,integrity,md5){var _this24=this;console.log(`PLAYLIST: onSrc: ${src} (${id})`);_asyncToGenerator(function*(){const url=new URL(_this24.src,window.location.href);yield _this24._scheduler.setSource(url.toString(),id,size,hash,integrity,md5);})();}_onViews(views){console.log(`PLAYLIST: onViews: ${JSON.stringify(views)}`);this._renderer.setViews(views);}_onSize(width,height){console.log(`PLAYLIST: onSize: ${width} ${height}`);this._renderer.setSize(width,height);}// Explicitly start playback if autoplay is false.
play(){var _this25=this;return _asyncToGenerator(function*(){_this25._prepareNextFrame();_this25._prepareIdleCallback();yield _this25._scheduler.play();})();}// Connect the scheduler to the renderer.
_connectSchedulerToRenderer(scheduler,renderer){var _this26=this;_asyncToGenerator(function*(){yield scheduler.setStatePort(transfer(_this26._channel.port2,[_this26._channel.port2]));renderer.setSchedulerMessagePort(_this26._channel.port1);})();}// Connect the scheduler to the cluster.
_connectRaftCluster(scheduler,renderer){var _this27=this;_asyncToGenerator(function*(){const message_listener=event=>{var _this27$_cluster;if((_this27$_cluster=_this27._cluster)!==null&&_this27$_cluster!==void 0&&_this27$_cluster.leader){return;}const value=JSON.parse(event.detail);renderer.setStateUnhooked(value);};const set_state=state=>{var _this27$_cluster2,_this27$_cluster3;if(!((_this27$_cluster2=_this27._cluster)!==null&&_this27$_cluster2!==void 0&&_this27$_cluster2.leader)){return;}(_this27$_cluster3=_this27._cluster)===null||_this27$_cluster3===void 0||_this27$_cluster3.broadcast(JSON.stringify(state));renderer.setStateUnhooked(state);};const join=decl=>{_this27._cluster=new RaftCluster(decl);_this27._cluster.join();_this27._cluster.addEventListener('message',message_listener);renderer.setSetStateHook(set_state);};const leave=()=>{if(_this27._cluster instanceof RaftCluster){renderer.clearSetStateHook();_this27._cluster.removeEventListener('message',message_listener);_this27._cluster.leave();}_this27._cluster=undefined;};yield scheduler.exposeNetwork(proxy(join),proxy(leave));})();}// REF: https://en.wikipedia.org/wiki/FreeSync
// Render at native frame rate, which may be variable, e.g. NVIDIA
// G-SYNC, or FreeSync.
_renderOneFrame(timestamp){this._renderer.render(timestamp);this._prepareNextFrame();}_prepareNextFrame(){this._raf_id=window.requestAnimationFrame(timestamp=>this._renderOneFrame(timestamp));}// REF: https://developer.mozilla.org/en-US/docs/Web/API/Window/requestIdleCallback
// Called during a browser's idle periods, i.e. background or low
// priority work.
_idle(deadline){if(deadline.timeRemaining()>0){this._renderer.idle();// Step the cluster state engine, if enabled.
if(this._cluster instanceof RaftCluster){const timestamp=performance.now();this._cluster.update(timestamp);}}this._prepareIdleCallback();}// REF: https://en.wikipedia.org/wiki/Nyquist_frequency
// Maximum interval set to half the Raft heartbeat.
_prepareIdleCallback(){this._ric_id=window.requestIdleCallback(deadline=>this._idle(deadline),{timeout:250});}},_WebPlaylistElement.styles=i$3`
		:host {
			display: block;
			contain: strict;
			overflow: clip;
			font-size: 0;
		}
		section {
			display: none;
		}
		main {
			position: relative;
			margin-left: 600px;
		}
		main * {
			visibility: hidden;
			display: block;
			position: absolute;
			top: 0;
			left: 0;
		}
		main .map1 {
			visibility: visible;
			will-change: opacity;
			z-index: 2;
		}
		main .map2 {
			visibility: visible;
			z-index: 1;
		}
	`,_WebPlaylistElement);__decorate$1([n({type:String,reflect:true})],WebPlaylistElement.prototype,"src",void 0);__decorate$1([n({attribute:'src-id',type:String,reflect:true})],WebPlaylistElement.prototype,"src_id",void 0);__decorate$1([n({attribute:'src-size',type:Number,reflect:true})],WebPlaylistElement.prototype,"src_size",void 0);__decorate$1([n({attribute:'src-hash',type:Object,reflect:true})],WebPlaylistElement.prototype,"src_hash",void 0);__decorate$1([n({attribute:'src-integrity',type:String,reflect:true})],WebPlaylistElement.prototype,"src_integrity",void 0);__decorate$1([n({attribute:'src-md5',type:String,reflect:true})],WebPlaylistElement.prototype,"src_md5",void 0);__decorate$1([n({type:Array,reflect:false})],WebPlaylistElement.prototype,"views",void 0);__decorate$1([n({type:Number,reflect:false})],WebPlaylistElement.prototype,"width",void 0);__decorate$1([n({type:Number,reflect:false})],WebPlaylistElement.prototype,"height",void 0);__decorate$1([n({type:Boolean,reflect:true})],WebPlaylistElement.prototype,"autoplay",void 0);__decorate$1([e('main')],WebPlaylistElement.prototype,"_main",void 0);__decorate$1([e('section')],WebPlaylistElement.prototype,"_section",void 0);WebPlaylistElement=__decorate$1([t('web-play-list')],WebPlaylistElement);WebPlaylistElement$1=WebPlaylistElement;// vim: tabstop=8 softtabstop=0 noexpandtab shiftwidth=8 nosmarttab
// Copyright 2025 Digital Signage Bunny Corp. Use of this source code is
// governed by an MIT-style license that can be found in the LICENSE file or at
// https://opensource.org/licenses/MIT.
__decorate=undefined&&undefined.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;for(var i=decorators.length-1;i>=0;i--)if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;return c>3&&r&&Object.defineProperty(target,key,r),r;};LunaPlaylistElement=(_LunaPlaylistElement=class LunaPlaylistElement extends WebPlaylistElement$1{// Cannot access absolute file:// URLs from LG WebOS.
_createWorker(){return new Worker('./dist/scheduler.bundle~chrome53.mjs',{type:'classic',credentials:'omit',name:'Scheduler'// Shown in debugger.
});}// Override the renderer to use LG WebOS compatible CSS Renderer.
_createRenderer(){if(this._section===null){throw new Error("cannot find <section> element to attach to.");}if(this._main===null){throw new Error("cannot find <main> element to attach to.");}const renderer=new LunaRenderer();renderer.init();this._connectSchedulerToRenderer(this._scheduler,renderer);this._connectRaftCluster(this._scheduler,renderer);renderer.setAssetTarget(this._main);renderer.setRenderTarget(this._main);return renderer;}},_LunaPlaylistElement.styles=i$3`
		:host {
			display: block;
			overflow: clip;
			font-size: 0;
		}
		section {
			display: none;
		}
		main {
			position: relative;
			margin-left: 600px;
		}
		main * {
			visibility: hidden;
			display: block;
			position: absolute;
			top: 0;
			left: 0;
		}
		main .map1 {
			visibility: visible;
			will-change: opacity;
			z-index: 2;
		}
		main .map2 {
			visibility: visible;
			z-index: 1;
		}
	`,_LunaPlaylistElement);LunaPlaylistElement=__decorate([t('luna-play-list')],LunaPlaylistElement);_export("default",LunaPlaylistElement$1=LunaPlaylistElement);}};});
//# sourceMappingURL=luna.systemjs.js.map
